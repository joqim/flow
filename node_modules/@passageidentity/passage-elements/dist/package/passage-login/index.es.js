import { P as PassageRouterView, L as LoginRoute, u as useCallbacks, a as useRouter } from "../customElements.es2.js";
import { d as defineComponent, a as appStyles, o as onBeforeUpdate, r as ref, s as setLocale, w as watch, u as useWebFonts, b as useIntlTelInput, _ as _export_sfc, c as useAppId, e as resolveComponent, f as createElementBlock, g as withDirectives, v as vShow, h as createBaseVNode, i as createBlock, j as useDefaultCountryCode, k as openBlock, l as defineCustomElement, m as safelyRegisterElement } from "../customElements.es.js";
const _sfc_main = defineComponent({
  name: "LoginApp",
  props: {
    appId: String,
    beforeAuth: Function,
    onSuccess: Function,
    lang: String,
    defaultCountryCode: String
  },
  components: {
    PassageRouterView
  },
  styles: [appStyles],
  setup(props) {
    function storeProps() {
      const { updateAppId } = useAppId();
      if (props.appId) {
        updateAppId(props.appId);
      }
      const { updateDefaultCountryCode } = useDefaultCountryCode();
      updateDefaultCountryCode(props.defaultCountryCode);
      const { setBeforeAuth, setOnSuccess } = useCallbacks();
      setBeforeAuth(props.beforeAuth);
      setOnSuccess(props.onSuccess);
    }
    storeProps();
    onBeforeUpdate(() => {
      storeProps();
    });
    const initialLoading = ref(true);
    setLocale(props.lang).finally(() => {
      initialLoading.value = false;
    });
    watch(
      () => props.lang,
      (previous, next) => {
        if (previous !== next) {
          setLocale(props.lang);
        }
      }
    );
    const { router } = useRouter();
    router.resetRouter();
    router.homeRoute = LoginRoute;
    useWebFonts();
    const containerRef = ref();
    useIntlTelInput(containerRef);
    return {
      containerRef,
      initialLoading
    };
  }
});
const _hoisted_1 = {
  id: "passage-auth-container",
  ref: "containerRef"
};
const _hoisted_2 = { class: "container" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_passage_router_view = resolveComponent("passage-router-view");
  return openBlock(), createElementBlock("div", _hoisted_1, [
    withDirectives(createBaseVNode("div", _hoisted_2, [
      (openBlock(), createBlock(_component_passage_router_view, { key: _ctx.appId }))
    ], 512), [
      [vShow, !_ctx.initialLoading]
    ])
  ], 512);
}
var LoginApp = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
const PassageLogin = defineCustomElement(LoginApp);
function registerPassageLoginElement() {
  safelyRegisterElement(PassageLogin, "login");
}
registerPassageLoginElement();
export { registerPassageLoginElement };
//# sourceMappingURL=index.es.js.map
