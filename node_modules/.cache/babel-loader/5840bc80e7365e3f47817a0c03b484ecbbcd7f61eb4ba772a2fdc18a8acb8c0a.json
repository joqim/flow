{"ast":null,"code":"var rt = Object.create;\nvar Ke = Object.defineProperty;\nvar nt = Object.getOwnPropertyDescriptor;\nvar ot = Object.getOwnPropertyNames;\nvar st = Object.getPrototypeOf,\n  at = Object.prototype.hasOwnProperty;\nvar lt = (l, e) => () => (l && (e = l(l = 0)), e);\nvar ut = (l, e) => () => (e || l((e = {\n  exports: {}\n}).exports, e), e.exports);\nvar ct = (l, e, t, i) => {\n  if (e && typeof e == \"object\" || typeof e == \"function\") for (let n of ot(e)) !at.call(l, n) && n !== t && Ke(l, n, {\n    get: () => e[n],\n    enumerable: !(i = nt(e, n)) || i.enumerable\n  });\n  return l;\n};\nvar pt = (l, e, t) => (t = l != null ? rt(st(l)) : {}, ct(e || !l || !l.__esModule ? Ke(t, \"default\", {\n  value: l,\n  enumerable: !0\n}) : t, l));\nvar p = lt(() => {});\nvar ze = ut((ee, fe) => {\n  p();\n  (function (l, e) {\n    \"use strict\";\n\n    var t = \"1.0.33\",\n      i = \"\",\n      n = \"?\",\n      P = \"function\",\n      h = \"undefined\",\n      x = \"object\",\n      O = \"string\",\n      D = \"major\",\n      o = \"model\",\n      u = \"name\",\n      s = \"type\",\n      a = \"vendor\",\n      c = \"version\",\n      B = \"architecture\",\n      V = \"console\",\n      f = \"mobile\",\n      d = \"tablet\",\n      N = \"smarttv\",\n      Y = \"wearable\",\n      Be = \"embedded\",\n      Se = 350,\n      ve = \"Amazon\",\n      oe = \"Apple\",\n      Ie = \"ASUS\",\n      je = \"BlackBerry\",\n      H = \"Browser\",\n      se = \"Chrome\",\n      et = \"Edge\",\n      ae = \"Firefox\",\n      le = \"Google\",\n      De = \"Huawei\",\n      _e = \"LG\",\n      Te = \"Microsoft\",\n      Ce = \"Motorola\",\n      ue = \"Opera\",\n      Pe = \"Samsung\",\n      Ee = \"Sharp\",\n      ce = \"Sony\",\n      Re = \"Xiaomi\",\n      xe = \"Zebra\",\n      qe = \"Facebook\",\n      tt = function (m, k) {\n        var g = {};\n        for (var R in m) k[R] && k[R].length % 2 === 0 ? g[R] = k[R].concat(m[R]) : g[R] = m[R];\n        return g;\n      },\n      pe = function (m) {\n        for (var k = {}, g = 0; g < m.length; g++) k[m[g].toUpperCase()] = m[g];\n        return k;\n      },\n      Fe = function (m, k) {\n        return typeof m === O ? Z(k).indexOf(Z(m)) !== -1 : !1;\n      },\n      Z = function (m) {\n        return m.toLowerCase();\n      },\n      it = function (m) {\n        return typeof m === O ? m.replace(/[^\\d\\.]/g, i).split(\".\")[0] : e;\n      },\n      Oe = function (m, k) {\n        if (typeof m === O) return m = m.replace(/^\\s\\s*/, i), typeof k === h ? m : m.substring(0, Se);\n      },\n      X = function (m, k) {\n        for (var g = 0, R, w, de, T, Q, C; g < k.length && !Q;) {\n          var He = k[g],\n            Ge = k[g + 1];\n          for (R = w = 0; R < He.length && !Q;) if (Q = He[R++].exec(m), Q) for (de = 0; de < Ge.length; de++) C = Q[++w], T = Ge[de], typeof T === x && T.length > 0 ? T.length === 2 ? typeof T[1] == P ? this[T[0]] = T[1].call(this, C) : this[T[0]] = T[1] : T.length === 3 ? typeof T[1] === P && !(T[1].exec && T[1].test) ? this[T[0]] = C ? T[1].call(this, C, T[2]) : e : this[T[0]] = C ? C.replace(T[1], T[2]) : e : T.length === 4 && (this[T[0]] = C ? T[3].call(this, C.replace(T[1], T[2])) : e) : this[T] = C || e;\n          g += 2;\n        }\n      },\n      Ae = function (m, k) {\n        for (var g in k) if (typeof k[g] === x && k[g].length > 0) {\n          for (var R = 0; R < k[g].length; R++) if (Fe(k[g][R], m)) return g === n ? e : g;\n        } else if (Fe(k[g], m)) return g === n ? e : g;\n        return m;\n      },\n      r = {\n        \"1.0\": \"/8\",\n        \"1.2\": \"/1\",\n        \"1.3\": \"/3\",\n        \"2.0\": \"/412\",\n        \"2.0.2\": \"/416\",\n        \"2.0.3\": \"/417\",\n        \"2.0.4\": \"/419\",\n        \"?\": \"/\"\n      },\n      Me = {\n        ME: \"4.90\",\n        \"NT 3.11\": \"NT3.51\",\n        \"NT 4.0\": \"NT4.0\",\n        2e3: \"NT 5.0\",\n        XP: [\"NT 5.1\", \"NT 5.2\"],\n        Vista: \"NT 6.0\",\n        7: \"NT 6.1\",\n        8: \"NT 6.2\",\n        \"8.1\": \"NT 6.3\",\n        10: [\"NT 6.4\", \"NT 10.0\"],\n        RT: \"ARM\"\n      },\n      Je = {\n        browser: [[/\\b(?:crmo|crios)\\/([\\w\\.]+)/i], [c, [u, \"Chrome\"]], [/edg(?:e|ios|a)?\\/([\\w\\.]+)/i], [c, [u, \"Edge\"]], [/(opera mini)\\/([-\\w\\.]+)/i, /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i, /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i], [u, c], [/opios[\\/ ]+([\\w\\.]+)/i], [c, [u, ue + \" Mini\"]], [/\\bopr\\/([\\w\\.]+)/i], [c, [u, ue]], [/(kindle)\\/([\\w\\.]+)/i, /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i, /(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i, /(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i, /(?:ms|\\()(ie) ([\\w\\.]+)/i, /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i, /(weibo)__([\\d\\.]+)/i], [u, c], [/(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i], [c, [u, \"UC\" + H]], [/microm.+\\bqbcore\\/([\\w\\.]+)/i, /\\bqbcore\\/([\\w\\.]+).+microm/i], [c, [u, \"WeChat(Win) Desktop\"]], [/micromessenger\\/([\\w\\.]+)/i], [c, [u, \"WeChat\"]], [/konqueror\\/([\\w\\.]+)/i], [c, [u, \"Konqueror\"]], [/trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i], [c, [u, \"IE\"]], [/yabrowser\\/([\\w\\.]+)/i], [c, [u, \"Yandex\"]], [/(avast|avg)\\/([\\w\\.]+)/i], [[u, /(.+)/, \"$1 Secure \" + H], c], [/\\bfocus\\/([\\w\\.]+)/i], [c, [u, ae + \" Focus\"]], [/\\bopt\\/([\\w\\.]+)/i], [c, [u, ue + \" Touch\"]], [/coc_coc\\w+\\/([\\w\\.]+)/i], [c, [u, \"Coc Coc\"]], [/dolfin\\/([\\w\\.]+)/i], [c, [u, \"Dolphin\"]], [/coast\\/([\\w\\.]+)/i], [c, [u, ue + \" Coast\"]], [/miuibrowser\\/([\\w\\.]+)/i], [c, [u, \"MIUI \" + H]], [/fxios\\/([-\\w\\.]+)/i], [c, [u, ae]], [/\\bqihu|(qi?ho?o?|360)browser/i], [[u, \"360 \" + H]], [/(oculus|samsung|sailfish|huawei)browser\\/([\\w\\.]+)/i], [[u, /(.+)/, \"$1 \" + H], c], [/(comodo_dragon)\\/([\\w\\.]+)/i], [[u, /_/g, \" \"], c], [/(electron)\\/([\\w\\.]+) safari/i, /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i, /m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i], [u, c], [/(metasr)[\\/ ]?([\\w\\.]+)/i, /(lbbrowser)/i, /\\[(linkedin)app\\]/i], [u], [/((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i], [[u, qe], c], [/safari (line)\\/([\\w\\.]+)/i, /\\b(line)\\/([\\w\\.]+)\\/iab/i, /(chromium|instagram)[\\/ ]([-\\w\\.]+)/i], [u, c], [/\\bgsa\\/([\\w\\.]+) .*safari\\//i], [c, [u, \"GSA\"]], [/headlesschrome(?:\\/([\\w\\.]+)| )/i], [c, [u, se + \" Headless\"]], [/ wv\\).+(chrome)\\/([\\w\\.]+)/i], [[u, se + \" WebView\"], c], [/droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i], [c, [u, \"Android \" + H]], [/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i], [u, c], [/version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i], [c, [u, \"Mobile Safari\"]], [/version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i], [c, u], [/webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i], [u, [c, Ae, r]], [/(webkit|khtml)\\/([\\w\\.]+)/i], [u, c], [/(navigator|netscape\\d?)\\/([-\\w\\.]+)/i], [[u, \"Netscape\"], c], [/mobile vr; rv:([\\w\\.]+)\\).+firefox/i], [c, [u, ae + \" Reality\"]], [/ekiohf.+(flow)\\/([\\w\\.]+)/i, /(swiftfox)/i, /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i, /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i, /(firefox)\\/([\\w\\.]+)/i, /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i, /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i, /(links) \\(([\\w\\.]+)/i], [u, c], [/(cobalt)\\/([\\w\\.]+)/i], [u, [c, /master.|lts./, \"\"]]],\n        cpu: [[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i], [[B, \"amd64\"]], [/(ia32(?=;))/i], [[B, Z]], [/((?:i[346]|x)86)[;\\)]/i], [[B, \"ia32\"]], [/\\b(aarch64|arm(v?8e?l?|_?64))\\b/i], [[B, \"arm64\"]], [/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i], [[B, \"armhf\"]], [/windows (ce|mobile); ppc;/i], [[B, \"arm\"]], [/((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i], [[B, /ower/, i, Z]], [/(sun4\\w)[;\\)]/i], [[B, \"sparc\"]], [/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i], [[B, Z]]],\n        device: [[/\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i], [o, [a, Pe], [s, d]], [/\\b((?:s[cgp]h|gt|sm)-\\w+|galaxy nexus)/i, /samsung[- ]([-\\w]+)/i, /sec-(sgh\\w+)/i], [o, [a, Pe], [s, f]], [/\\((ip(?:hone|od)[\\w ]*);/i], [o, [a, oe], [s, f]], [/\\((ipad);[-\\w\\),; ]+apple/i, /applecoremedia\\/[\\w\\.]+ \\((ipad)/i, /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i], [o, [a, oe], [s, d]], [/(macintosh);/i], [o, [a, oe]], [/\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i], [o, [a, De], [s, d]], [/(?:huawei|honor)([-\\w ]+)[;\\)]/i, /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i], [o, [a, De], [s, f]], [/\\b(poco[\\w ]+)(?: bui|\\))/i, /\\b; (\\w+) build\\/hm\\1/i, /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i, /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i, /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i], [[o, /_/g, \" \"], [a, Re], [s, f]], [/\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i], [[o, /_/g, \" \"], [a, Re], [s, d]], [/; (\\w+) bui.+ oppo/i, /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i], [o, [a, \"OPPO\"], [s, f]], [/vivo (\\w+)(?: bui|\\))/i, /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i], [o, [a, \"Vivo\"], [s, f]], [/\\b(rmx[12]\\d{3})(?: bui|;|\\))/i], [o, [a, \"Realme\"], [s, f]], [/\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i, /\\bmot(?:orola)?[- ](\\w*)/i, /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i], [o, [a, Ce], [s, f]], [/\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i], [o, [a, Ce], [s, d]], [/((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i], [o, [a, _e], [s, d]], [/(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i, /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i, /\\blg-?([\\d\\w]+) bui/i], [o, [a, _e], [s, f]], [/(ideatab[-\\w ]+)/i, /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i], [o, [a, \"Lenovo\"], [s, d]], [/(?:maemo|nokia).*(n900|lumia \\d+)/i, /nokia[-_ ]?([-\\w\\.]*)/i], [[o, /_/g, \" \"], [a, \"Nokia\"], [s, f]], [/(pixel c)\\b/i], [o, [a, le], [s, d]], [/droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i], [o, [a, le], [s, f]], [/droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i], [o, [a, ce], [s, f]], [/sony tablet [ps]/i, /\\b(?:sony)?sgp\\w+(?: bui|\\))/i], [[o, \"Xperia Tablet\"], [a, ce], [s, d]], [/ (kb2005|in20[12]5|be20[12][59])\\b/i, /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i], [o, [a, \"OnePlus\"], [s, f]], [/(alexa)webm/i, /(kf[a-z]{2}wi)( bui|\\))/i, /(kf[a-z]+)( bui|\\)).+silk\\//i], [o, [a, ve], [s, d]], [/((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i], [[o, /(.+)/g, \"Fire Phone $1\"], [a, ve], [s, f]], [/(playbook);[-\\w\\),; ]+(rim)/i], [o, a, [s, d]], [/\\b((?:bb[a-f]|st[hv])100-\\d)/i, /\\(bb10; (\\w+)/i], [o, [a, je], [s, f]], [/(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i], [o, [a, Ie], [s, d]], [/ (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i], [o, [a, Ie], [s, f]], [/(nexus 9)/i], [o, [a, \"HTC\"], [s, d]], [/(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i, /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i, /(alcatel|geeksphone|nexian|panasonic|sony(?!-bra))[-_ ]?([-\\w]*)/i], [a, [o, /_/g, \" \"], [s, f]], [/droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i], [o, [a, \"Acer\"], [s, d]], [/droid.+; (m[1-5] note) bui/i, /\\bmz-([-\\w]{2,})/i], [o, [a, \"Meizu\"], [s, f]], [/\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i], [o, [a, Ee], [s, f]], [/(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i, /(hp) ([\\w ]+\\w)/i, /(asus)-?(\\w+)/i, /(microsoft); (lumia[\\w ]+)/i, /(lenovo)[-_ ]?([-\\w]+)/i, /(jolla)/i, /(oppo) ?([\\w ]+) bui/i], [a, o, [s, f]], [/(archos) (gamepad2?)/i, /(hp).+(touchpad(?!.+tablet)|tablet)/i, /(kindle)\\/([\\w\\.]+)/i, /(nook)[\\w ]+build\\/(\\w+)/i, /(dell) (strea[kpr\\d ]*[\\dko])/i, /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i, /(trinity)[- ]*(t\\d{3}) bui/i, /(gigaset)[- ]+(q\\w{1,9}) bui/i, /(vodafone) ([\\w ]+)(?:\\)| bui)/i], [a, o, [s, d]], [/(surface duo)/i], [o, [a, Te], [s, d]], [/droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i], [o, [a, \"Fairphone\"], [s, f]], [/(u304aa)/i], [o, [a, \"AT&T\"], [s, f]], [/\\bsie-(\\w*)/i], [o, [a, \"Siemens\"], [s, f]], [/\\b(rct\\w+) b/i], [o, [a, \"RCA\"], [s, d]], [/\\b(venue[\\d ]{2,7}) b/i], [o, [a, \"Dell\"], [s, d]], [/\\b(q(?:mv|ta)\\w+) b/i], [o, [a, \"Verizon\"], [s, d]], [/\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i], [o, [a, \"Barnes & Noble\"], [s, d]], [/\\b(tm\\d{3}\\w+) b/i], [o, [a, \"NuVision\"], [s, d]], [/\\b(k88) b/i], [o, [a, \"ZTE\"], [s, d]], [/\\b(nx\\d{3}j) b/i], [o, [a, \"ZTE\"], [s, f]], [/\\b(gen\\d{3}) b.+49h/i], [o, [a, \"Swiss\"], [s, f]], [/\\b(zur\\d{3}) b/i], [o, [a, \"Swiss\"], [s, d]], [/\\b((zeki)?tb.*\\b) b/i], [o, [a, \"Zeki\"], [s, d]], [/\\b([yr]\\d{2}) b/i, /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i], [[a, \"Dragon Touch\"], o, [s, d]], [/\\b(ns-?\\w{0,9}) b/i], [o, [a, \"Insignia\"], [s, d]], [/\\b((nxa|next)-?\\w{0,9}) b/i], [o, [a, \"NextBook\"], [s, d]], [/\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i], [[a, \"Voice\"], o, [s, f]], [/\\b(lvtel\\-)?(v1[12]) b/i], [[a, \"LvTel\"], o, [s, f]], [/\\b(ph-1) /i], [o, [a, \"Essential\"], [s, f]], [/\\b(v(100md|700na|7011|917g).*\\b) b/i], [o, [a, \"Envizen\"], [s, d]], [/\\b(trio[-\\w\\. ]+) b/i], [o, [a, \"MachSpeed\"], [s, d]], [/\\btu_(1491) b/i], [o, [a, \"Rotor\"], [s, d]], [/(shield[\\w ]+) b/i], [o, [a, \"Nvidia\"], [s, d]], [/(sprint) (\\w+)/i], [a, o, [s, f]], [/(kin\\.[onetw]{3})/i], [[o, /\\./g, \" \"], [a, Te], [s, f]], [/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i], [o, [a, xe], [s, d]], [/droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i], [o, [a, xe], [s, f]], [/(ouya)/i, /(nintendo) ([wids3utch]+)/i], [a, o, [s, V]], [/droid.+; (shield) bui/i], [o, [a, \"Nvidia\"], [s, V]], [/(playstation [345portablevi]+)/i], [o, [a, ce], [s, V]], [/\\b(xbox(?: one)?(?!; xbox))[\\); ]/i], [o, [a, Te], [s, V]], [/smart-tv.+(samsung)/i], [a, [s, N]], [/hbbtv.+maple;(\\d+)/i], [[o, /^/, \"SmartTV\"], [a, Pe], [s, N]], [/(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i], [[a, _e], [s, N]], [/(apple) ?tv/i], [a, [o, oe + \" TV\"], [s, N]], [/crkey/i], [[o, se + \"cast\"], [a, le], [s, N]], [/droid.+aft(\\w)( bui|\\))/i], [o, [a, ve], [s, N]], [/\\(dtv[\\);].+(aquos)/i, /(aquos-tv[\\w ]+)\\)/i], [o, [a, Ee], [s, N]], [/(bravia[\\w ]+)( bui|\\))/i], [o, [a, ce], [s, N]], [/(mitv-\\w{5}) bui/i], [o, [a, Re], [s, N]], [/\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i, /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w ]*; *(\\w[^;]*);([^;]*)/i], [[a, Oe], [o, Oe], [s, N]], [/\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i], [[s, N]], [/((pebble))app/i], [a, o, [s, Y]], [/droid.+; (glass) \\d/i], [o, [a, le], [s, Y]], [/droid.+; (wt63?0{2,3})\\)/i], [o, [a, xe], [s, Y]], [/(quest( 2)?)/i], [o, [a, qe], [s, Y]], [/(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i], [a, [s, Be]], [/droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i], [o, [s, f]], [/droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i], [o, [s, d]], [/\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i], [[s, d]], [/(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i], [[s, f]], [/(android[-\\w\\. ]{0,9});.+buil/i], [o, [a, \"Generic\"]]],\n        engine: [[/windows.+ edge\\/([\\w\\.]+)/i], [c, [u, et + \"HTML\"]], [/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i], [c, [u, \"Blink\"]], [/(presto)\\/([\\w\\.]+)/i, /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, /ekioh(flow)\\/([\\w\\.]+)/i, /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i, /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i], [u, c], [/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i], [c, u]],\n        os: [[/microsoft (windows) (vista|xp)/i], [u, c], [/(windows) nt 6\\.2; (arm)/i, /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i, /(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i], [u, [c, Ae, Me]], [/(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i], [[u, \"Windows\"], [c, Ae, Me]], [/ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i, /cfnetwork\\/.+darwin/i], [[c, /_/g, \".\"], [u, \"iOS\"]], [/(mac os x) ?([\\w\\. ]*)/i, /(macintosh|mac_powerpc\\b)(?!.+haiku)/i], [[u, \"Mac OS\"], [c, /_/g, \".\"]], [/droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i], [c, u], [/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i, /(blackberry)\\w*\\/([\\w\\.]*)/i, /(tizen|kaios)[\\/ ]([\\w\\.]+)/i, /\\((series40);/i], [u, c], [/\\(bb(10);/i], [c, [u, je]], [/(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i], [c, [u, \"Symbian\"]], [/mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i], [c, [u, ae + \" OS\"]], [/web0s;.+rt(tv)/i, /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i], [c, [u, \"webOS\"]], [/crkey\\/([\\d\\.]+)/i], [c, [u, se + \"cast\"]], [/(cros) [\\w]+ ([\\w\\.]+\\w)/i], [[u, \"Chromium OS\"], c], [/(nintendo|playstation) ([wids345portablevuch]+)/i, /(xbox); +xbox ([^\\);]+)/i, /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i, /(mint)[\\/\\(\\) ]?(\\w*)/i, /(mageia|vectorlinux)[; ]/i, /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i, /(hurd|linux) ?([\\w\\.]*)/i, /(gnu) ?([\\w\\.]*)/i, /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, /(haiku) (\\w+)/i], [u, c], [/(sunos) ?([\\w\\.\\d]*)/i], [[u, \"Solaris\"], c], [/((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i, /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i, /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux)/i, /(unix) ?([\\w\\.]*)/i], [u, c]]\n      },\n      A = function (m, k) {\n        if (typeof m === x && (k = m, m = e), !(this instanceof A)) return new A(m, k).getResult();\n        var g = m || (typeof l !== h && l.navigator && l.navigator.userAgent ? l.navigator.userAgent : i),\n          R = k ? tt(Je, k) : Je;\n        return this.getBrowser = function () {\n          var w = {};\n          return w[u] = e, w[c] = e, X.call(w, g, R.browser), w.major = it(w.version), w;\n        }, this.getCPU = function () {\n          var w = {};\n          return w[B] = e, X.call(w, g, R.cpu), w;\n        }, this.getDevice = function () {\n          var w = {};\n          return w[a] = e, w[o] = e, w[s] = e, X.call(w, g, R.device), w;\n        }, this.getEngine = function () {\n          var w = {};\n          return w[u] = e, w[c] = e, X.call(w, g, R.engine), w;\n        }, this.getOS = function () {\n          var w = {};\n          return w[u] = e, w[c] = e, X.call(w, g, R.os), w;\n        }, this.getResult = function () {\n          return {\n            ua: this.getUA(),\n            browser: this.getBrowser(),\n            engine: this.getEngine(),\n            os: this.getOS(),\n            device: this.getDevice(),\n            cpu: this.getCPU()\n          };\n        }, this.getUA = function () {\n          return g;\n        }, this.setUA = function (w) {\n          return g = typeof w === O && w.length > Se ? Oe(w, Se) : w, this;\n        }, this.setUA(g), this;\n      };\n    A.VERSION = t, A.BROWSER = pe([u, c, D]), A.CPU = pe([B]), A.DEVICE = pe([o, a, s, V, f, N, d, Y, Be]), A.ENGINE = A.OS = pe([u, c]), typeof ee !== h ? (typeof fe !== h && fe.exports && (ee = fe.exports = A), ee.UAParser = A) : typeof define === P && define.amd ? define(function () {\n      return A;\n    }) : typeof l !== h && (l.UAParser = A);\n    var G = typeof l !== h && (l.jQuery || l.Zepto);\n    if (G && !G.ua) {\n      var he = new A();\n      G.ua = he.getResult(), G.ua.get = function () {\n        return he.getUA();\n      }, G.ua.set = function (m) {\n        he.setUA(m);\n        var k = he.getResult();\n        for (var g in k) G.ua[g] = k[g];\n      };\n    }\n  })(typeof window == \"object\" ? window : ee);\n});\np();\np();\np();\np();\nvar U = class {\n    encodeBytes(e) {\n      let i = btoa(String.fromCharCode(...new Uint8Array(e))).replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n      return We(i);\n    }\n    decodeBytes(e) {\n      let t = e.replace(/-/g, \"+\").replace(/_/g, \"/\"),\n        i = We(t);\n      return Uint8Array.from(atob(i), P => P.charCodeAt(0));\n    }\n  },\n  We = l => {\n    let e = l.indexOf(\"=\");\n    return l.slice(0, e === -1 ? l.length : e);\n  };\np();\np();\nvar _ = class extends Error {\n    constructor(t, i) {\n      super();\n      this.name = \"PassageError\", this.statusCode = i.status, this.statusText = i.statusText, this.message = this._parsePsgErrorResponse(t);\n    }\n    _parsePsgErrorResponse(t) {\n      try {\n        return t = JSON.parse(t), t.error ? t.error : \"\";\n      } catch {\n        return t;\n      }\n    }\n  },\n  M = (r => (r[r.MultipleChoice = 300] = \"MultipleChoice\", r[r.MovedPermanantly = 301] = \"MovedPermanantly\", r[r.Found = 302] = \"Found\", r[r.SeeOther = 303] = \"SeeOther\", r[r.NotModified = 304] = \"NotModified\", r[r.TemporaryRedirect = 307] = \"TemporaryRedirect\", r[r.PermanentRedirect = 308] = \"PermanentRedirect\", r[r.BadRequest = 400] = \"BadRequest\", r[r.Unauthorized = 401] = \"Unauthorized\", r[r.PaymentRequired = 402] = \"PaymentRequired\", r[r.Forbidden = 403] = \"Forbidden\", r[r.NotFound = 404] = \"NotFound\", r[r.MethodNotAllowed = 405] = \"MethodNotAllowed\", r[r.NotAcceptable = 406] = \"NotAcceptable\", r[r.ProxyAuthenticationRequired = 407] = \"ProxyAuthenticationRequired\", r[r.RequestTimeout = 408] = \"RequestTimeout\", r[r.Conflict = 409] = \"Conflict\", r[r.Gone = 410] = \"Gone\", r[r.LengthRequired = 411] = \"LengthRequired\", r[r.PreconditionFailed = 412] = \"PreconditionFailed\", r[r.PayloadTooLarge = 413] = \"PayloadTooLarge\", r[r.URITooLong = 414] = \"URITooLong\", r[r.UnsupportedMediaType = 415] = \"UnsupportedMediaType\", r[r.RangeNotSatisfiable = 416] = \"RangeNotSatisfiable\", r[r.ExpectationFailed = 417] = \"ExpectationFailed\", r[r.MisdirectedRequest = 421] = \"MisdirectedRequest\", r[r.UnprocessableEntity = 422] = \"UnprocessableEntity\", r[r.Locked = 423] = \"Locked\", r[r.FailedDependency = 424] = \"FailedDependency\", r[r.TooEarly = 425] = \"TooEarly\", r[r.UpgradeRequired = 426] = \"UpgradeRequired\", r[r.PreconditionRequired = 428] = \"PreconditionRequired\", r[r.TooManyRequests = 429] = \"TooManyRequests\", r[r.RequestHeaderFieldsTooLarge = 431] = \"RequestHeaderFieldsTooLarge\", r[r.UnavailableForLegalReasons = 451] = \"UnavailableForLegalReasons\", r[r.InternalServerError = 500] = \"InternalServerError\", r[r.NotImplemented = 501] = \"NotImplemented\", r[r.BadGateway = 502] = \"BadGateway\", r[r.ServiceUnavailable = 503] = \"ServiceUnavailable\", r[r.GatewayTimeout = 504] = \"GatewayTimeout\", r[r.HTTPVersionNotSupported = 505] = \"HTTPVersionNotSupported\", r[r.VariantAlsoNegotiates = 506] = \"VariantAlsoNegotiates\", r[r.InsufficientStorage = 507] = \"InsufficientStorage\", r[r.LoopDetected = 508] = \"LoopDetected\", r[r.NotExtended = 510] = \"NotExtended\", r[r.NetworkAuthenticationRequired = 511] = \"NetworkAuthenticationRequired\", r[r.PSGCredObjectDoesNotExist = 700] = \"PSGCredObjectDoesNotExist\", r[r.PSGParsePublicKeyForNewDeviceFailed = 701] = \"PSGParsePublicKeyForNewDeviceFailed\", r[r.PSGParsePublicKeyForLoginFailed = 702] = \"PSGParsePublicKeyForLoginFailed\", r[r.PSGCouldNotGetUserCredential = 703] = \"PSGCouldNotGetUserCredential\", r[r.PSGLoginRequired = 704] = \"PSGLoginRequired\", r))(M || {});\nimport me from \"js-cookie\";\nvar ge = new U(),\n  I = class {\n    psgCredIDExists(e) {\n      let t = e.user.id,\n        i = e.handshake.challenge.publicKey.allowCredentials,\n        n = this.getPsgCredObj();\n      if (!n) throw new _(\"Could not get psg_cred_obj\", {\n        status: 700,\n        statusText: \"PSG Cred Object Does Not Exist\"\n      });\n      let P = JSON.parse(n)[t];\n      return P ? i.find(x => {\n        if (ge.encodeBytes(ge.decodeBytes(x.id)) === ge.encodeBytes(ge.decodeBytes(P))) return !0;\n      }) : !1;\n    }\n    setPsgCredID(e, t) {\n      if (!t) throw new _(\"Could not get user's credential\", {\n        status: 703,\n        statusText: \"PSG Could Not Get User Credential\"\n      });\n      let i = this.getPsgCredObj();\n      if (i) {\n        let n = JSON.parse(i);\n        n[e] = t == null ? void 0 : t.id, this.setPsgCredObj(JSON.stringify(n));\n      } else this.setPsgCredObj(JSON.stringify({\n        [e]: t == null ? void 0 : t.id\n      }));\n    }\n    removeCredential(e) {\n      let t = this.getPsgCredObj();\n      if (t === void 0) return;\n      let i = JSON.parse(t);\n      Object.keys(i).forEach(n => {\n        i[n] === e && delete i[n];\n      }), this.setPsgCredObj(JSON.stringify(i));\n    }\n    getPsgCredObj() {\n      let e = me.get(\"psg_cred_obj\"),\n        t = localStorage.getItem(\"psg_cred_obj\");\n      if (e !== void 0) return me.set(\"psg_cred_obj\", e, {\n        expires: 400,\n        sameSite: \"Strict\"\n      }), t === null && localStorage.setItem(\"psg_cred_obj\", e), e;\n      if (t !== null) return me.set(\"psg_cred_obj\", t, {\n        expires: 400,\n        sameSite: \"Strict\"\n      }), t;\n    }\n    setPsgCredObj(e) {\n      me.set(\"psg_cred_obj\", e, {\n        expires: 400,\n        sameSite: \"Strict\"\n      }), localStorage.setItem(\"psg_cred_obj\", e);\n    }\n  };\np();\nvar $e = pt(ze(), 1),\n  q = class {\n    constructor() {\n      this.userAgent = new $e.default();\n    }\n    async getBrowserInfo() {\n      return {\n        createPassKeySupported: await this._canBrowserCreatePassKey(),\n        getPassKeySupported: await this._canBrowserGetPasskey(),\n        conditionalUISupported: await this._isConditionalMediationAvailable()\n      };\n    }\n    async _canBrowserCreatePassKey() {\n      return !!(this._isiOSPasskeySupported() || this._isMacPasskeySupported());\n    }\n    _canBrowserGetPasskey() {\n      return this._isiOSPasskeySupported() || this._isMacPasskeySupported() || this._isDesktopChrome108() ? Promise.resolve(!0) : Promise.resolve(!1);\n    }\n    async _isConditionalMediationAvailable() {\n      return !1;\n    }\n    _isiOSPasskeySupported() {\n      return this.userAgent.getOS().name == \"iOS\" && parseFloat(this.userAgent.getOS().version || \"\") >= 16;\n    }\n    _isMacPasskeySupported() {\n      return this.userAgent.getBrowser().name == \"Safari\" && parseFloat(this.userAgent.getBrowser().version || \"\") >= 16 && this.userAgent.getOS().name == \"Mac OS\";\n    }\n    _isDesktopChrome108() {\n      return this.userAgent.getBrowser().name == \"Chrome\" && parseFloat(this.userAgent.getBrowser().version || \"\") >= 108;\n    }\n  };\np();\nasync function y(l) {\n  return l.ok ? l.json() : await l.text().then(e => {\n    throw new _(e, l);\n  });\n}\np();\nfunction we() {\n  let l = navigator.userAgent.toLowerCase().indexOf(\"firefox\") > -1,\n    e = window.navigator.userAgent.match(/Firefox\\/([0-9]+)\\./),\n    t = e ? parseInt(e[1]) : 0;\n  return navigator.platform.indexOf(\"Win\") !== -1 && l && t === 98;\n}\nfunction be(l) {\n  let e = new Uint8Array(68);\n  e.set(l.slice(0, 68));\n  let t = new Uint8Array(l.byteLength - 68);\n  t.set(l.slice(68, l.byteLength));\n  let i = new Uint8Array(15),\n    n = new Uint8Array(e.byteLength + i.byteLength + t.byteLength);\n  n.set(e, 0), n.set(i, e.byteLength), n.set(t, e.byteLength + i.byteLength);\n  let P = n[30] + 15;\n  return n.set([P], 30), n;\n}\np();\np();\np();\nvar Ve = {\n  URL: \"https://auth.passage.id\",\n  version: \"@passageidentity/passage-js 3.1.0\",\n  CAPTURE_EVENT_URL: \"https://us-central1-passage-prod.cloudfunctions.net/capture-event\",\n  SENTRY_RELEASE: \"passage-js@3.1.0-prod\",\n  SENTRY_PROJECT: \"passage-js\",\n  SENTRY_PROJECT_DSN: \"\",\n  SENTRY_PROJECT_ENV: \"prod\",\n  SENTRY_PROJECT_VERSION: \"3.1.0\"\n};\nvar j = Ve;\nfunction b(l) {\n  let e = new Headers(l),\n    t = j.version;\n  return t && e.append(\"Passage-Version\", t), e;\n}\np();\np();\nvar Ue = class {\n    getRefreshToken() {\n      return Promise.resolve(void 0);\n    }\n  },\n  Ne = class extends Ue {\n    clearTokens() {\n      return Promise.resolve();\n    }\n  },\n  ye = class extends Ne {\n    constructor() {\n      super(...arguments);\n      this.noLocalStorage = typeof window > \"u\";\n      this.noLocalStorageError = t => \"Failed to access localStorage or cookies. Must be run client-side.\";\n    }\n    getAuthToken() {\n      if (this.noLocalStorage) return Promise.reject(this.noLocalStorageError(\"getAuthToken\"));\n      let t = localStorage.getItem(\"psg_auth_token\");\n      if (t === null) {\n        let i = new _(\"Login required\", {\n          status: 704,\n          statusText: \"Login required\"\n        });\n        return Promise.reject(i);\n      }\n      return Promise.resolve(t);\n    }\n    setAuthToken(t) {\n      if (this.noLocalStorage) return Promise.reject(this.noLocalStorageError(\"setAuthToken\"));\n      localStorage.setItem(\"psg_auth_token\", t);\n      let i = !this._isHttps() && this._isLocalHost();\n      return document.cookie = `psg_auth_token = ${t}; path=/ ${i ? \"\" : \";secure\"}`, Promise.resolve();\n    }\n    getRefreshToken() {\n      this.noLocalStorage && Promise.reject(this.noLocalStorageError(\"getRefreshToken\"));\n      let t = localStorage.getItem(\"psg_refresh_token\");\n      return t === null ? Promise.resolve(void 0) : Promise.resolve(t);\n    }\n    setRefreshToken(t) {\n      return this.noLocalStorage && Promise.reject(this.noLocalStorageError(\"setRefreshToken\")), localStorage.setItem(\"psg_refresh_token\", t), Promise.resolve();\n    }\n    setTokens(t) {\n      return this.noLocalStorage && Promise.reject(this.noLocalStorageError(\"setTokens\")), this.setAuthToken(t.auth_token), t.refresh_token && this.setRefreshToken(t.refresh_token), Promise.resolve();\n    }\n    clearTokens() {\n      return this.noLocalStorage && Promise.reject(this.noLocalStorageError(\"clearTokens\")), localStorage.removeItem(\"psg_auth_token\"), document.cookie = \"psg_auth_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;\", localStorage.removeItem(\"psg_refresh_token\"), Promise.resolve();\n    }\n    _isLocalHost() {\n      return Boolean(window.location.hostname === \"localhost\" || window.location.hostname === \"[::1]\" || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n    }\n    _isHttps() {\n      return location.protocol === \"https:\";\n    }\n  };\nfunction K(l) {\n  return l.setTokens !== void 0;\n}\nvar ht = l => typeof l == \"object\" && l !== null && typeof l.auth_result < \"u\";\nfunction F(l, e) {\n  return ht(l) ? (K(e) && e.setTokens(l.auth_result), l) : (console.warn(\"Not a valid auth response\"), l);\n}\nvar te = new U(),\n  dt = new I(),\n  mt = new q(),\n  ie = class {\n    constructor(e, t, i) {\n      this.tokenStore = t;\n      this.apiUrl = e + \"/register/\", this.identifier = i;\n    }\n    async withWebAuthn() {\n      let {\n          createPassKeySupported: e\n        } = await mt.getBrowserInfo(),\n        t = await fetch(this.apiUrl + \"webauthn/start\", {\n          headers: b(),\n          body: JSON.stringify({\n            identifier: this.identifier\n          }),\n          method: \"POST\"\n        }).then(y),\n        i = await navigator.credentials.create({\n          publicKey: this._parsePublicKey(t.handshake.challenge.publicKey)\n        }).catch(O => {\n          throw new _(\"error parsing public key for webAuthn\", {\n            status: 702,\n            statusText: \"PSG Parse Public Key For Login Failed\"\n          });\n        }).then(O => O),\n        n = new Uint8Array(i == null ? void 0 : i.response.attestationObject);\n      we() && (n = be(n));\n      let P = [];\n      (i == null ? void 0 : i.response.getTransports) && typeof (i == null ? void 0 : i.response.getTransports) == \"function\" && (P = i == null ? void 0 : i.response.getTransports());\n      let h = t.user.id,\n        x = await fetch(this.apiUrl + \"webauthn/finish\", {\n          headers: b(),\n          method: \"POST\",\n          body: JSON.stringify({\n            user_id: h,\n            handshake_id: t.handshake.id,\n            handshake_response: {\n              rawId: te.encodeBytes(i == null ? void 0 : i.rawId),\n              id: i == null ? void 0 : i.id,\n              type: i == null ? void 0 : i.type,\n              response: {\n                attestationObject: te.encodeBytes(n),\n                clientDataJSON: te.encodeBytes(i == null ? void 0 : i.response.clientDataJSON)\n              },\n              transports: P\n            },\n            cred_type: e ? \"passkey\" : \"platform\"\n          })\n        }).then(y).then(O => F(O, this.tokenStore));\n      return dt.setPsgCredID(h, i), x.auth_result;\n    }\n    _parsePublicKey(e) {\n      return e.challenge = te.decodeBytes(e.challenge.toString()), e.user.id = te.decodeBytes(e.user.id.toString()), e;\n    }\n  };\np();\nvar J = new U(),\n  re = class {\n    constructor(e, t, i) {\n      this.tokenStore = t;\n      this.apiUrl = e + \"/login/\", this.identifier = i != null ? i : \"\";\n    }\n    async withWebAuthn() {\n      let e = JSON.stringify({\n          identifier: this.identifier\n        }),\n        t = this.identifier ? e : void 0,\n        i = await fetch(this.apiUrl + \"webauthn/start\", {\n          headers: b(),\n          method: \"POST\",\n          body: t\n        }).then(y),\n        n = await navigator.credentials.get({\n          publicKey: this._parsePublicKey(i.handshake.challenge.publicKey)\n        }).catch(h => {\n          throw new _(\"error parsing public key for webAuthn\", {\n            status: 702,\n            statusText: \"PSG Parse Public Key For Login Failed\"\n          });\n        }).then(h => h);\n      return n ? (await fetch(this.apiUrl + \"webauthn/finish\", {\n        headers: b(),\n        method: \"POST\",\n        body: JSON.stringify({\n          user_id: this.identifier ? i.user.id : void 0,\n          handshake_id: i.handshake.id,\n          handshake_response: {\n            id: n.id,\n            rawId: J.encodeBytes(n.rawId),\n            type: n.type,\n            response: {\n              clientDataJSON: J.encodeBytes(n.response.clientDataJSON),\n              authenticatorData: J.encodeBytes(n.response.authenticatorData),\n              signature: J.encodeBytes(n.response.signature),\n              userHandle: J.encodeBytes(n.response.userHandle)\n            }\n          }\n        })\n      }).then(y).then(h => F(h, this.tokenStore))).auth_result : {\n        auth_token: \"\",\n        redirect_url: \"\"\n      };\n    }\n    _parsePublicKey(e) {\n      if (e.challenge = J.decodeBytes(e.challenge.toString()), e.allowCredentials) {\n        for (let t = 0; t < e.allowCredentials.length; t++) {\n          let i = e.allowCredentials[t];\n          i.id = J.decodeBytes(i.id.toString());\n        }\n        return e;\n      }\n      return e;\n    }\n  };\np();\nvar W = class {\n  constructor(e) {\n    this.apiUrl = e;\n  }\n  async appInfo() {\n    return (await fetch(this.apiUrl, {\n      headers: b(),\n      method: \"GET\"\n    }).then(y)).app;\n  }\n  async identifierExists(e) {\n    return (await fetch(this.apiUrl + \"/users?identifier=\" + encodeURIComponent(e), {\n      headers: b(),\n      method: \"GET\"\n    }).then(y)).user;\n  }\n};\np();\nvar L = new U(),\n  Ye = new I(),\n  E = class {\n    constructor(e, t) {\n      this.tokenStore = t;\n      this.apiUrl = e;\n    }\n    async newRegister(e, t) {\n      return (await fetch(this.apiUrl + \"/register/magic-link\", {\n        headers: b(),\n        method: \"POST\",\n        body: JSON.stringify({\n          identifier: e,\n          magic_link_path: window.location.pathname,\n          language: t\n        })\n      }).then(y)).magic_link;\n    }\n    async newLogin(e, t) {\n      return (await fetch(this.apiUrl + \"/login/magic-link\", {\n        headers: b(),\n        method: \"POST\",\n        body: JSON.stringify({\n          identifier: e,\n          magic_link_path: window.location.pathname,\n          language: t\n        })\n      }).then(y)).magic_link;\n    }\n    async getStatus(e) {\n      return (await fetch(this.apiUrl + \"/magic-link/status\", {\n        headers: b(),\n        method: \"POST\",\n        body: JSON.stringify({\n          id: e\n        })\n      }).then(y).then(i => F(i, this.tokenStore))).auth_result;\n    }\n    async activate(e) {\n      return (await fetch(this.apiUrl + \"/magic-link/activate\", {\n        headers: b(),\n        method: \"PATCH\",\n        body: JSON.stringify({\n          magic_link: e\n        })\n      }).then(y).then(i => F(i, this.tokenStore))).auth_result;\n    }\n    async activateWebAuthnLogin(e) {\n      let t = await fetch(this.apiUrl + \"/magic-link/webauthn/login/start\", {\n        headers: b(),\n        body: JSON.stringify({\n          magic_link: e\n        }),\n        method: \"POST\"\n      }).then(y);\n      if (!(await Ye.psgCredIDExists(t))) throw new _(\"psg_cred_obj does not exist in the allow list\", {\n        status: 700,\n        statusText: \"Not Found\"\n      });\n      let n = await navigator.credentials.get({\n        publicKey: this._parsePublicKeyLogin(t.handshake.challenge.publicKey)\n      }).catch(h => {\n        throw new _(\"could not parse publickey for login\", {\n          status: 702,\n          statusText: \"PSG Parse Public Key For Login Failed\"\n        });\n      });\n      return n ? (await fetch(this.apiUrl + \"/magic-link/webauthn/login/finish\", {\n        headers: b(),\n        method: \"POST\",\n        body: JSON.stringify({\n          magic_link: e,\n          user_id: t.user.id,\n          handshake_id: t.handshake.id,\n          handshake_response: {\n            id: n.id,\n            rawId: L.encodeBytes(n.rawId),\n            type: n.type,\n            response: {\n              clientDataJSON: L.encodeBytes(n.response.clientDataJSON),\n              authenticatorData: L.encodeBytes(n.response.authenticatorData),\n              signature: L.encodeBytes(n.response.signature),\n              userHandle: L.encodeBytes(n.response.userHandle)\n            }\n          }\n        })\n      }).then(y).then(h => F(h, this.tokenStore))).auth_result : {\n        auth_token: \"\",\n        redirect_url: \"\"\n      };\n    }\n    async activateWebAuthnNewDevice(e) {\n      let t = await fetch(this.apiUrl + \"/magic-link/webauthn/new/start\", {\n          headers: b(),\n          body: JSON.stringify({\n            magic_link: e\n          }),\n          method: \"POST\"\n        }).then(y),\n        i = await navigator.credentials.create({\n          publicKey: this._parsePublicKeyNewDevice(t.handshake.challenge.publicKey)\n        }).catch(x => {\n          throw new _(\"could not parse public key for new device\", {\n            status: 701,\n            statusText: \"PSG Parse Public Key For New Device Failed\"\n          });\n        }),\n        n = new Uint8Array(i == null ? void 0 : i.response.attestationObject);\n      we() && (n = be(n));\n      let P = await fetch(this.apiUrl + \"/magic-link/webauthn/new/finish\", {\n          headers: b(),\n          method: \"POST\",\n          body: JSON.stringify({\n            magic_link: e,\n            user_id: t.user.id,\n            handshake_id: t.handshake.id,\n            handshake_response: {\n              rawId: L.encodeBytes(i.rawId),\n              id: i.id,\n              type: i.type,\n              response: {\n                attestationObject: L.encodeBytes(n),\n                clientDataJSON: L.encodeBytes(i.response.clientDataJSON)\n              }\n            },\n            device_name: navigator.userAgent\n          })\n        }).then(y).then(x => F(x, this.tokenStore)),\n        h = t.user.id;\n      return Ye.setPsgCredID(h, i), P.auth_result;\n    }\n    _parsePublicKeyLogin(e) {\n      if (e.challenge = L.decodeBytes(e.challenge.toString()), e.allowCredentials) {\n        for (let t = 0; t < e.allowCredentials.length; t++) {\n          let i = e.allowCredentials[t];\n          i.id = L.decodeBytes(i.id.toString());\n        }\n        return e;\n      }\n      return e;\n    }\n    _parsePublicKeyNewDevice(e) {\n      return e.challenge = L.decodeBytes(e.challenge.toString()), e.user.id = L.decodeBytes(e.user.id.toString()), e;\n    }\n  };\np();\np();\nimport Le from \"jwt-decode\";\np();\nfunction z(l) {\n  return `${j.URL}/v1/apps/${l}`;\n}\nvar $ = class {\n  constructor(e, t) {\n    this.tokenStore = t;\n    this.apiUrl = z(e) + \"/tokens/\";\n  }\n  async authGuard() {\n    try {\n      let e = await this.tokenStore.getAuthToken(),\n        t = Le(e, {\n          header: !0\n        }),\n        i = Le(e);\n      return !!(i !== void 0 && t !== void 0 && this._validJWTPayload(i) && this._validJWTHeader(t));\n    } catch {\n      return !1;\n    }\n  }\n  async signOut() {\n    let e = await this.tokenStore.getRefreshToken();\n    return e ? fetch(`${this.apiUrl}?` + new URLSearchParams({\n      refresh_token: e\n    }), {\n      method: \"DELETE\"\n    }).then(_ref => {\n      let {\n        status: t\n      } = _ref;\n      return t === 200;\n    }).finally(() => {\n      K(this.tokenStore) && this.tokenStore.clearTokens();\n    }) : (K(this.tokenStore) && this.tokenStore.clearTokens(), !0);\n  }\n  async getAuthToken() {\n    let e = await this.tokenStore.getAuthToken();\n    if ((await this.tokenStore.getRefreshToken()) === void 0) return e;\n    let i = Le(e);\n    return i !== void 0 && this._validJWTPayload(i) ? Promise.resolve(e) : this.refresh().then(n => n.auth_token);\n  }\n  async refresh() {\n    let e = new _(\"Login required\", {\n        status: 704,\n        statusText: \"Login required\"\n      }),\n      t = this.tokenStore.getRefreshToken();\n    return t ? fetch(this.apiUrl, {\n      headers: b(),\n      method: \"POST\",\n      body: JSON.stringify({\n        refresh_token: t\n      })\n    }).then(y).then(i => (K(this.tokenStore) && this.tokenStore.setTokens(i.auth_result), i.auth_result)).catch(() => {\n      throw e;\n    }) : Promise.reject(e);\n  }\n  _validJWTPayload(e) {\n    let t = [\"exp\", \"iss\", \"sub\"],\n      i = Math.floor(Date.now() / 1e3);\n    return t.forEach(n => {\n      if (!(n in e)) return !1;\n    }), !(e.exp && i > e.exp);\n  }\n  _validJWTHeader(e) {\n    let t = {\n      alg: \"RS256\",\n      typ: \"JWT\"\n    };\n    return !(e.alg !== t.alg || e.typ !== t.typ);\n  }\n};\nvar ne = new U(),\n  Ze = new I(),\n  gt = new q(),\n  ke = class {\n    constructor(e, t) {\n      this.tokenStore = t;\n      this.apiUrl = z(e) + \"/currentuser\", this.session = new $(e, this.tokenStore);\n    }\n    async userInfo() {\n      let e = await this._getToken(),\n        t = await fetch(this.apiUrl, {\n          method: \"GET\",\n          headers: b({\n            Authorization: `Bearer ${e}`\n          })\n        }).then(async i => i.status !== 200 ? void 0 : await i.json()).catch(i => {\n          throw new _(\"Failed to fetch current user.\", {\n            status: 404,\n            statusText: \"Not Found\"\n          });\n        });\n      return t == null ? void 0 : t.user;\n    }\n    async changeEmail(e, t) {\n      let i = await this._getToken();\n      return (await fetch(`${this.apiUrl}/email`, {\n        method: \"PATCH\",\n        headers: b({\n          Authorization: `Bearer ${i}`,\n          \"Content-Type\": \"application/json\"\n        }),\n        body: JSON.stringify({\n          new_email: e,\n          language: t\n        })\n      }).then(y)).magic_link;\n    }\n    async changePhone(e, t) {\n      let i = await this._getToken();\n      return (await fetch(`${this.apiUrl}/phone`, {\n        method: \"PATCH\",\n        headers: b({\n          Authorization: `Bearer ${i}`,\n          \"Content-Type\": \"application/json\"\n        }),\n        body: JSON.stringify({\n          new_phone: e,\n          language: t\n        })\n      }).then(y)).magic_link;\n    }\n    async editDevice(e, t) {\n      if (e === \"\" || e === void 0) throw new _(\"A deviceID is required for an edit device request.\", {\n        status: 400,\n        statusText: \"Bad Request\"\n      });\n      if (Object.keys(t).length === 0) throw new _(\"Edit device request must not have an empty request body.\", {\n        status: 400,\n        statusText: \"Bad Request\"\n      });\n      let i = await this._getToken();\n      return (await fetch(`${this.apiUrl}/devices/${e}`, {\n        method: \"PATCH\",\n        headers: b({\n          Authorization: `Bearer ${i}`,\n          \"Content-Type\": \"application/json\"\n        }),\n        body: JSON.stringify({\n          ...t\n        })\n      }).then(y)).device;\n    }\n    async listDevices() {\n      let e = await this._getToken();\n      return (await fetch(`${this.apiUrl}/devices/`, {\n        method: \"GET\",\n        headers: b({\n          Authorization: `Bearer ${e}`,\n          \"Content-Type\": \"application/json\"\n        })\n      }).then(y)).devices;\n    }\n    async addDevice() {\n      let e = await this._getToken(),\n        {\n          createPassKeySupported: t\n        } = await gt.getBrowserInfo(),\n        i = await fetch(this.apiUrl + \"/devices/start\", {\n          headers: b({\n            Authorization: `Bearer ${e}`\n          }),\n          method: \"POST\"\n        }).then(y),\n        n = await navigator.credentials.create({\n          publicKey: this._parsePublicKey(i.handshake.challenge.publicKey)\n        }).catch(O => {\n          throw new _(\"failed to parse public key\", {\n            status: 701,\n            statusText: \"PSG Parse Public Key For New Device Failed\"\n          });\n        }).then(O => O),\n        P = [];\n      (n == null ? void 0 : n.response.getTransports) && typeof (n == null ? void 0 : n.response.getTransports) == \"function\" && (P = n == null ? void 0 : n.response.getTransports());\n      let h = i.user.id,\n        x = await fetch(this.apiUrl + \"/devices/finish\", {\n          headers: b({\n            Authorization: `Bearer ${e}`\n          }),\n          method: \"POST\",\n          body: JSON.stringify({\n            user_id: h,\n            handshake_id: i.handshake.id,\n            handshake_response: {\n              rawId: ne.encodeBytes(n == null ? void 0 : n.rawId),\n              id: n == null ? void 0 : n.id,\n              type: n == null ? void 0 : n.type,\n              response: {\n                attestationObject: ne.encodeBytes(n == null ? void 0 : n.response.attestationObject),\n                clientDataJSON: ne.encodeBytes(n == null ? void 0 : n.response.clientDataJSON)\n              },\n              transports: P\n            },\n            cred_type: t ? \"passkey\" : \"platform\"\n          })\n        }).then(y);\n      return Ze.setPsgCredID(h, n), x.device;\n    }\n    async deleteDevice(e) {\n      let t = typeof e == \"string\" ? e : e.id,\n        i = typeof e == \"string\" ? void 0 : e.cred_id;\n      if (!t) throw new _(\"A deviceID is required to delete a device.\", {\n        status: 404,\n        statusText: \"Not Found\"\n      });\n      let n = !1,\n        P = await this._getToken();\n      return n = await fetch(`${this.apiUrl}/devices/${t}`, {\n        method: \"DELETE\",\n        headers: b({\n          Authorization: `Bearer ${P}`,\n          \"Content-Type\": \"application/json\"\n        })\n      }).then(async h => h.ok ? !0 : await h.text().then(x => {\n        throw new _(x, h);\n      })), n && i !== void 0 && Ze.removeCredential(i), n;\n    }\n    async getMetadata() {\n      let e = await this._getToken();\n      return (await fetch(`${this.apiUrl}/user-metadata`, {\n        method: \"GET\",\n        headers: b({\n          Authorization: `Bearer ${e}`\n        })\n      }).then(y)).user_metadata;\n    }\n    async updateMetadata(e) {\n      let t = await this._getToken();\n      return (await fetch(`${this.apiUrl}/user-metadata`, {\n        method: \"PATCH\",\n        headers: b({\n          Authorization: `Bearer ${t}`,\n          \"Content-Type\": \"application/json\"\n        }),\n        body: JSON.stringify({\n          user_metadata: e\n        })\n      }).then(y)).user;\n    }\n    _parsePublicKey(e) {\n      return e.challenge = ne.decodeBytes(e.challenge.toString()), e.user.id = ne.decodeBytes(e.user.id.toString()), e;\n    }\n    async _getToken() {\n      return await this.session.getAuthToken();\n    }\n  };\np();\nvar Xe = async (l, e) => {\n  let t,\n    i = new Promise(n => {\n      t = setTimeout(n, e);\n    });\n  return Promise.race([l, i]).then(n => (clearTimeout(t), n));\n};\nvar Qe = class {\n  constructor(e, t) {\n    this.appID = e;\n    this.fullUrl = z(this.appID), (t == null ? void 0 : t.tokenStore) === void 0 ? this.tokenStore = new ye() : this.tokenStore = t.tokenStore;\n  }\n  credIDExists(e) {\n    let t = new I().getPsgCredObj();\n    return t ? !!JSON.parse(t)[e] : !1;\n  }\n  async register(e) {\n    return await new ie(this.fullUrl, this.tokenStore, e).withWebAuthn();\n  }\n  async login(e) {\n    return await new re(this.fullUrl, this.tokenStore, e).withWebAuthn();\n  }\n  async appInfo() {\n    return await new W(this.fullUrl).appInfo();\n  }\n  async browserInfo() {\n    return await new q().getBrowserInfo();\n  }\n  checkWebauthnConfig(e) {\n    let t = !0;\n    return e.auth_origin.replace(/\\/$/, \"\") != window.location.origin.replace(/\\/$/, \"\") && (console.error('The auth_origin configured for webauthn in your app settings does not match the \"origin\" of your current URL.  Please reconfigure this in the admin console. (Your current \"origin\" is `' + window.location.origin + \"`) Passage will continue to work with other authentication methods.\"), t = !1), t;\n  }\n  async isWebauthnSupported(e) {\n    let t = !1;\n    return window.PublicKeyCredential && (e ? t = !0 : await Xe(window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().then(i => {\n      t = i;\n    }).catch(() => console.log(\"Something went wrong.\")), 500)), t;\n  }\n  async identifierExists(e) {\n    return await new W(this.fullUrl).identifierExists(e);\n  }\n  async newRegisterMagicLink(e, t) {\n    return await new E(this.fullUrl, this.tokenStore).newRegister(e, t);\n  }\n  async newLoginMagicLink(e, t) {\n    return await new E(this.fullUrl, this.tokenStore).newLogin(e, t);\n  }\n  async magicLinkActivate(e) {\n    return await new E(this.fullUrl, this.tokenStore).activate(e);\n  }\n  async magicLinkActivateWebAuthnLogin(e) {\n    return await new E(this.fullUrl, this.tokenStore).activateWebAuthnLogin(e);\n  }\n  async magicLinkActivateWebAuthnNewDevice(e) {\n    return await new E(this.fullUrl, this.tokenStore).activateWebAuthnNewDevice(e);\n  }\n  async getMagicLinkStatus(e) {\n    return await new E(this.fullUrl, this.tokenStore).getStatus(e);\n  }\n  getCurrentUser() {\n    return new ke(this.appID, this.tokenStore);\n  }\n  getCurrentSession() {\n    return new $(this.appID, this.tokenStore);\n  }\n  async createUser(e) {\n    return (await fetch(`${this.fullUrl}/users`, {\n      headers: b(),\n      body: JSON.stringify({\n        ...e\n      }),\n      method: \"POST\"\n    }).then(y)).user;\n  }\n};\np();\nimport { serializeError as ft } from \"serialize-error\";\nvar wt = l => JSON.parse(JSON.stringify(l, (e, t) => {\n    if (!(t == null || t === \"undefined\")) return t;\n  })),\n  ar = async l => {\n    try {\n      let {\n          error: e,\n          message: t,\n          sentryConfig: {\n            url: i = j.CAPTURE_EVENT_URL,\n            project: n = j.SENTRY_PROJECT,\n            dsn: P = j.SENTRY_PROJECT_DSN,\n            environment: h = j.SENTRY_PROJECT_ENV,\n            release: x = j.SENTRY_RELEASE,\n            version: O = j.SENTRY_PROJECT_VERSION\n          } = {}\n        } = l,\n        D = wt({\n          project: n,\n          dsn: P,\n          environment: h,\n          url: i,\n          release: x,\n          version: O\n        });\n      if (!(D.project && D.url) || !(e || t)) return;\n      let o = {\n        project: D.project,\n        dsn: D.dsn,\n        environment: D.environment,\n        release: D.release,\n        version: D.version\n      };\n      t && (o = {\n        ...o,\n        message: t\n      }), e && (o = {\n        ...o,\n        serializedError: ft(typeof e == \"string\" ? new Error(e) : e)\n      }), await fetch(D.url, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: JSON.stringify(o)\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\np();\nvar bt = (i => (i.email = \"email\", i.phone = \"phone\", i.both = \"both\", i))(bt || {}),\n  yt = (n => (n.Phone = \"phone\", n.Email = \"email\", n.Both = \"both\", n.Either = \"either\", n))(yt || {}),\n  kt = (h => (h.STRING = \"string\", h.BOOLEAN = \"boolean\", h.INTEGER = \"integer\", h.DATE = \"date\", h.PHONE = \"phone\", h.EMAIL = \"email\", h))(kt || {});\np();\np();\nvar St = (i => (i.ACTIVE = \"active\", i.INACTIVE = \"inactive\", i.PENDING = \"pending\", i))(St || {}),\n  vt = (t => (t.Platform = \"platform\", t.Passkey = \"passkey\", t))(vt || {});\np();\np();\np();\nexport { bt as Identifier, Qe as Passage, _ as PassageError, M as PassageErrorCode, ye as PassageTokenStore, St as PassageUserStatus, Ue as ReadOnlyTokenStore, yt as RequiredIdentifier, $ as Session, Ne as TokenStore, ke as User, kt as UserMetadataType, vt as WebAuthnType, ar as captureEvent, wt as cleanSentryConfig, K as isFullTokenStore };","map":{"version":3,"names":["p","lt","ze","ut","ee","fe","l","e","t","i","n","P","h","x","O","D","o","u","s","a","c","B","V","f","d","N","Y","Be","Se","ve","oe","Ie","je","H","se","et","ae","le","De","_e","Te","Ce","ue","Pe","Ee","ce","Re","xe","qe","tt","extend","m","k","g","R","length","concat","pe","enumerize","toUpperCase","Fe","has","Z","indexOf","lowerize","toLowerCase","it","majorize","replace","split","Oe","trim","substring","X","rgxMapper","w","de","T","Q","C","He","Ge","exec","call","test","Ae","strMapper","r","Me","ME","XP","Vista","RT","Je","browser","cpu","device","engine","os","A","UAParser","getResult","navigator","userAgent","getBrowser","major","version","getCPU","getDevice","getEngine","getOS","ua","getUA","setUA","VERSION","BROWSER","CPU","DEVICE","ENGINE","OS","exports","define","amd","G","jQuery","Zepto","he","get","set","window","U","encodeBytes","btoa","String","fromCharCode","Uint8Array","We","decodeBytes","from","atob","charCodeAt","slice","_","Error","constructor","name","statusCode","status","statusText","message","_parsePsgErrorResponse","JSON","parse","error","M","MultipleChoice","MovedPermanantly","Found","SeeOther","NotModified","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","URITooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HTTPVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","PSGCredObjectDoesNotExist","PSGParsePublicKeyForNewDeviceFailed","PSGParsePublicKeyForLoginFailed","PSGCouldNotGetUserCredential","PSGLoginRequired","me","ge","I","psgCredIDExists","user","id","handshake","challenge","publicKey","allowCredentials","getPsgCredObj","find","setPsgCredID","setPsgCredObj","stringify","removeCredential","Object","keys","forEach","localStorage","getItem","expires","sameSite","setItem","$e","pt","q","default","getBrowserInfo","createPassKeySupported","_canBrowserCreatePassKey","getPassKeySupported","_canBrowserGetPasskey","conditionalUISupported","_isConditionalMediationAvailable","_isiOSPasskeySupported","_isMacPasskeySupported","_isDesktopChrome108","Promise","resolve","parseFloat","y","ok","json","text","then","we","match","parseInt","platform","be","byteLength","Ve","URL","CAPTURE_EVENT_URL","SENTRY_RELEASE","SENTRY_PROJECT","SENTRY_PROJECT_DSN","SENTRY_PROJECT_ENV","SENTRY_PROJECT_VERSION","j","b","Headers","append","Ue","getRefreshToken","Ne","clearTokens","ye","arguments","noLocalStorage","noLocalStorageError","getAuthToken","reject","setAuthToken","_isHttps","_isLocalHost","document","cookie","setRefreshToken","setTokens","auth_token","refresh_token","removeItem","Boolean","location","hostname","protocol","K","ht","auth_result","F","console","warn","te","dt","mt","ie","tokenStore","apiUrl","identifier","withWebAuthn","fetch","headers","body","method","credentials","create","_parsePublicKey","catch","response","attestationObject","getTransports","user_id","handshake_id","handshake_response","rawId","type","clientDataJSON","transports","cred_type","toString","J","re","authenticatorData","signature","userHandle","redirect_url","W","appInfo","app","identifierExists","encodeURIComponent","L","Ye","E","newRegister","magic_link_path","pathname","language","magic_link","newLogin","getStatus","activate","activateWebAuthnLogin","_parsePublicKeyLogin","activateWebAuthnNewDevice","_parsePublicKeyNewDevice","device_name","Le","z","$","authGuard","header","_validJWTPayload","_validJWTHeader","signOut","URLSearchParams","_ref","finally","refresh","Math","floor","Date","now","exp","alg","typ","ne","Ze","gt","ke","session","userInfo","_getToken","Authorization","changeEmail","new_email","changePhone","new_phone","editDevice","listDevices","devices","addDevice","deleteDevice","cred_id","getMetadata","user_metadata","updateMetadata","Xe","asyncCallWithTimeout","setTimeout","race","clearTimeout","Qe","appID","fullUrl","credIDExists","register","login","browserInfo","checkWebauthnConfig","auth_origin","origin","isWebauthnSupported","PublicKeyCredential","isUserVerifyingPlatformAuthenticatorAvailable","log","newRegisterMagicLink","newLoginMagicLink","magicLinkActivate","magicLinkActivateWebAuthnLogin","magicLinkActivateWebAuthnNewDevice","getMagicLinkStatus","getCurrentUser","getCurrentSession","createUser","serializeError","ft","wt","ar","sentryConfig","url","project","dsn","environment","release","serializedError","Accept","bt","email","phone","both","yt","Phone","Email","Both","Either","kt","STRING","BOOLEAN","INTEGER","DATE","PHONE","EMAIL","St","ACTIVE","INACTIVE","PENDING","vt","Platform","Passkey","Identifier","Passage","PassageError","PassageErrorCode","PassageTokenStore","PassageUserStatus","ReadOnlyTokenStore","RequiredIdentifier","Session","TokenStore","User","UserMetadataType","WebAuthnType","captureEvent","cleanSentryConfig","isFullTokenStore"],"sources":["/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/node_modules/tsup/assets/esm_shims.js","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/node_modules/ua-parser-js/src/ua-parser.js","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/index.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/Passage.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/Register.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/BytesHelper.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/AuthTokenHelper.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/PassageError.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/BrowserHelper.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/utils/HandleResponse.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/utils/FirefoxHandlers.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/utils/GetHeaders.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/config/Environment.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/config/env_config.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/utils/StoreResponseTokens.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/TokenStore.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/Login.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/UnauthInfo.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/MagicLink.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/User.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/Session.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/utils/getBaseURL.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/utils/asyncCallWithTimout.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/CaptureEvent.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/types/PassageApp.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/types/PassageMagicLinkRequest.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/types/PassageUser.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/types/PassageUserInfo.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/types/PassageDevice.ts","/Users/kaalabhairava/Documents/PassageExpress/example-react/03-Login-With-Profile/node_modules/@passageidentity/passage-js/src/types/PassageEditDeviceRequest.ts"],"sourcesContent":["// Shim globals in esm bundle\nimport { fileURLToPath } from 'url'\nimport path from 'path'\n\nconst getFilename = () => fileURLToPath(import.meta.url)\nconst getDirname = () => path.dirname(getFilename())\n\nexport const __dirname = /* @__PURE__ */ getDirname()\nexport const __filename = /* @__PURE__ */ getFilename()\n","/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.33\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.33',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 350;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SHARP   = 'Sharp',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK   = 'Facebook';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,      // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n            // Trident based\n            /(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i,               // Avant/IEMobile/SlimBrowser\n            /(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i,                                  // Baidu Browser\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i\n            ], [VERSION, [NAME, 'WeChat(Win) Desktop']], [\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /yabrowser\\/([\\w\\.]+)/i                                             // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI '+BROWSER]], [\n            /fxios\\/([-\\w\\.]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihu|(qi?ho?o?|360)browser/i                                     // 360\n            ], [[NAME, '360 '+BROWSER]], [\n            /(oculus|samsung|sailfish|huawei)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1 '+BROWSER], VERSION], [                      // Oculus/Samsung/Sailfish/Huawei Browser\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i            // QQBrowser/Baidu App/2345 Browser\n            ], [NAME, VERSION], [\n            /(metasr)[\\/ ]?([\\w\\.]+)/i,                                         // SouGouBrowser\n            /(lbbrowser)/i,                                                     // LieBao Browser\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(chromium|instagram)[\\/ ]([-\\w\\.]+)/i                              // Chromium/Instagram\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i                // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i                                              // Links\n            ], [NAME, VERSION], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /master.|lts./, \"\"]]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            // Ordered by popularity\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-\\w+|galaxy nexus)/i,\n            /samsung[- ]([-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /\\((ip(?:hone|od)[\\w ]*);/i                                         // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+)(?: bui|\\))/i,                                       // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[12]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi)( bui|\\))/i,                                         // Kindle Fire without Silk\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w)( bui|\\))/i                                          // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                              // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mitv-\\w{5}) bui/i                                                 // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w ]*; *(\\w[^;]*);([^;]*)/i               // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n            /(quest( 2)?)/i                                                     // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i           // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i                                       // iCab\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows) nt 6\\.2; (arm)/i,                                        // Windows RT\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i,            // Windows Phone\n            /(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[NAME, 'Windows'], [VERSION, strMapper, windowsVersionMap]], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i                    // Android-x86/HarmonyOS\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+ ([\\w\\.]+\\w)/i                                         // Chromium OS\n            ], [[NAME, 'Chromium OS'], VERSION],[\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux)/i,            // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _ua = ua || ((typeof window !== UNDEF_TYPE && window.navigator && window.navigator.userAgent) ? window.navigator.userAgent : EMPTY);\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser.major = majorize(_browser.version);\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === FUNC_TYPE && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","export * from './Passage';\nexport * from './PassageError';\nexport * from './CaptureEvent';\nexport * from './User';\nexport * from './Session';\nexport * from './TokenStore';\nexport * from './types/PassageApp';\nexport * from './types/PassageMagicLinkRequest';\nexport * from './types/PassageUser';\nexport * from './types/PassageUserInfo';\nexport * from './types/PassageDevice';\nexport * from './types/PassageEditDeviceRequest';\nexport * from './types/PassageUser';\n\nexport { BrowserInfo } from './BrowserHelper';\n","import Register from './Register';\nimport Login from './Login';\nimport UnAuth from './UnauthInfo';\nimport MagicLink from './MagicLink';\nimport { PassageAppInfo } from './types/PassageApp';\nimport { CreateUserPayload, PassageUser } from './types/PassageUser';\nimport { PassageMagicLinkRequest } from './types/PassageMagicLinkRequest';\nimport { User } from './User';\nimport { handleResponse } from './utils/HandleResponse';\nimport { asyncCallWithTimeout } from './utils/asyncCallWithTimout';\nimport BrowserHelper, { BrowserInfo } from './BrowserHelper';\nimport { getHeaders } from './utils/GetHeaders';\nimport { Session } from './Session';\nimport { PassageTokenStore, ReadOnlyTokenStore, TokenStore } from './TokenStore';\nimport { PassageConfig } from './types/PassageConfig';\nimport { getBaseURL } from './utils/getBaseURL';\nimport AuthTokenHelper from './AuthTokenHelper';\n\nexport interface authResult {\n    redirect_url: string;\n    auth_token: string;\n    refresh_token?: string;\n}\n\n/**\n * The Passage class used to perform register and login operations.\n * The only parameter is the app handle for the application.\n *\n * @example\n * ```\n * import Passage from '@passageidentity/passage-js';\n * const passage = new Passage(app_id);\n * ```\n */\nexport class Passage {\n    fullUrl: string;\n    private tokenStore: TokenStore | ReadOnlyTokenStore;\n\n    /**\n     * Constructor configuring the Passage class' attributes\n     * @param {string} appID the App's corresponding AppID\n     * @param {PassageConfig | undefined} config An optional parameter to pass in a configurable properties.\n     * The tokenStore property is an object that implementes ReadOnlyTokenStore or TokenStore to manage retrieval and storage of tokens.\n     * If no tokenStore is provided by default Passage will store tokens in a combination of localstorage and cookies.\n     */\n    constructor(private appID: string, config?: PassageConfig) {\n        this.fullUrl = getBaseURL(this.appID);\n        if (config?.tokenStore === undefined) {\n            this.tokenStore = new PassageTokenStore();\n        } else {\n            this.tokenStore = config.tokenStore;\n        }\n    }\n\n    /**\n     * Check to see if the credentialID exists in localStorage via\n     * the key psg_cred_obj.\n     * @param {string} userID the Passage User's userID\n     * @return {boolean} returns true if psg_cred_obj exists in localstorage, false if not\n     */\n    credIDExists(userID: string): boolean {\n        const psgCredObj = new AuthTokenHelper().getPsgCredObj();\n\n        if (!psgCredObj) return false;\n        const psgCredID = JSON.parse(psgCredObj)[userID];\n        if (psgCredID) return true;\n        return false;\n    }\n\n    /**\n     * Passage will attempt a webauthn register for the new user, which will return a webauthn challenge.\n     * Webauthn register is a two step process to create a credential. Successful response is a JSON object with the redirect URL.\n     *\n     * @param {string} identifier email address / phone for user\n     * @return {Promise<authResult>} a data object that includes a redirect URL and sets the `psg_auth_token` in local storage.\n     *\n     * @example\n     * ```javascript\n     * import Passage from '@passageidentity/passage-js';\n     *\n     * const passage = new Passage(app_id);\n     * const identifier = document.getElementById(<\"email\" | \"phone\">).value;\n     *\n     * await passage.register(identifier)\n     *   .then(res => {\n     *       // on succes, redirect. auth token set in local storage\n     *       location.href(res.redirectURL);\n     *   })\n     *   .catch(e => console.log(e));\n     * ```\n     */\n    async register(identifier: string): Promise<authResult> {\n        const signUp = new Register(this.fullUrl, this.tokenStore, identifier);\n        return await signUp.withWebAuthn();\n    }\n\n    /**\n     * Passage will attempt a webauthn login for an existing user, which will return a webauthn challenge.\n     * Webauthn login is a two step process to retrieve and verify the credential.\n     *\n     * @param {string} identifier email address / phone for user\n     * @return {Promise<authResult>} a data object that includes a redirect URL and sets the `psg_auth_token` in local storage.\n     *\n     * @example\n     * ```javascript\n     * import Passage from '@passageidentity/passage-js';\n     *\n     * const passage = new Passage(app_id);\n     * const identifier = document.getElementById(<\"email\" | \"phone\">).value;\n     *\n     * await passage.login(identifier)\n     *   .then(res => {\n     *       // on succes, redirect. auth token set in local storage\n     *       location.href(res.redirectURL);\n     *   })\n     *   .catch(e => console.log(e));\n     * ```\n     */\n    async login(identifier: string): Promise<authResult> {\n        const login = new Login(this.fullUrl, this.tokenStore, identifier);\n        return await login.withWebAuthn();\n    }\n\n    /**\n     * Get information about an app.\n     *\n     * @return {Promise<PassageAppInfo>} a data object containing app information and the authentication policy\n     *\n     * @example\n     * ```javascript\n     * import Passage from '@passageidentity/passage-js';\n     *\n     * const passage = new Passage(app_id);\n     *\n     * await passage.appInfo\n     *  .then(data => {\n     *      // look at information regarding a particular app\n     *  }).catch(e => console.log(e));\n     * ```\n     */\n    async appInfo(): Promise<PassageAppInfo> {\n        const unAuth = new UnAuth(this.fullUrl);\n        return await unAuth.appInfo();\n    }\n\n    /** Get webauthn-related information about the current browser.\n     * @return {Promise<BrowserInfo>} a data object containing information about what webauthn operations are supported on the browser.\n     */\n    async browserInfo(): Promise<BrowserInfo> {\n        return await new BrowserHelper().getBrowserInfo();\n    }\n\n    /**\n     * Checks if an application's auth origin matches the current origin on an end user's browser.\n     * If this function returns false, webauthn will not work properly on this domain.\n     *\n     * @param {PassageAppInfo} appInfo JSON body containing app information that is returned from the {appInfo} function\n     * @return {boolean} true if webauthn is configured properly, false if not\n     *\n     * @example\n     * ```javascript\n     * import Passage from '@passageidentity/passage-js'\n     *\n     * const passage = new Passage(app_id);\n     * const webauthn_support = true;\n     * const identifier = document.getElementById(<\"email\" | \"phone\">).value;\n     *\n     * await passage.appInfo\n     *   .then(res => {\n     *       webauthn_supported = passage.checkWebauthnConfig(res)\n     *   }).catch(e => console.log(e));\n     *\n     * if (webauthn_supported) {\n     *   await passage.login(identifier)\n     *       .then(data => {\n     *           ...\n     *   }).catch(e => console.log(e));\n     * }\n     * ```\n     */\n    checkWebauthnConfig(appInfo: PassageAppInfo): boolean {\n        let webauthnAllowed: boolean = true;\n        // compare auth origins to ensure webauthn will work\n        // remove trailing slashes before comparison (it will still work regardless)\n        if (\n            // @ts-ignore\n            appInfo.auth_origin.replace(/\\/$/, '') != window.location.origin.replace(/\\/$/, '')\n        ) {\n            console.error(\n                'The auth_origin configured for webauthn in your app settings does not match the \"origin\" of your current URL.  Please reconfigure this in the admin console. (Your current \"origin\" is `' +\n                    window.location.origin +\n                    '`) Passage will continue to work with other authentication methods.'\n            );\n            webauthnAllowed = false;\n        }\n        return webauthnAllowed;\n    }\n\n    /**\n     * Detects if an end user's browser and device support webauthn.\n     *\n     * @param {boolean} roaming if we should allow roaming authenticators (Passage does not support roaming authenticators and must be false)\n     * @return {boolean} true if webauthn is supported on this device, false if not\n     *\n     * @example\n     * ```javascript\n     * import Passage from '@passageidentity/passage-js';\n     *\n     * const passage = new Passage(app_id);\n     * const identifier = document.getElementById(<\"email\" | \"phone\">).value;\n     * const webauthn_supported = await passage.isWebauthnSupported();\n     *\n     * if (webauthn_supported) {\n     *      await (passage.login(identifier)\n     *          .then(data => {\n     *              ...\n     *      }).catch((e) => {\n     *          console.log(e);\n     *      });\n     * }\n     * ```\n     */\n    async isWebauthnSupported(roaming: boolean): Promise<boolean> {\n        // Assume no webauthn is supported\n        let webauthn = false;\n        if (window.PublicKeyCredential) {\n            // if roaming is allowed, this is the only check needed\n            if (roaming) {\n                webauthn = true;\n            } else {\n                // NOTE: This timeout is in place to address an issue in the iOS WKWebView embedded context where the promise returned by isUserVerifyingPlatformAuthenticatorAvailable() is never resolved\n                await asyncCallWithTimeout(\n                    window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable()\n                        .then((available) => {\n                            // If false, webauthn supported, platform auth *not* supported.\n                            // Only get here is platform auth is on, so return false\n                            webauthn = available;\n                        })\n                        .catch(() => console.log('Something went wrong.')),\n                    500\n                );\n            }\n        }\n        return webauthn;\n    }\n\n    /**\n     * Look-up an identifier and return the user if the identifier exists\n     * @param {string} identifier email address / phone for user\n     * @return {Promise<PassageUser>}\n     */\n    async identifierExists(identifier: string): Promise<PassageUser> {\n        const unAuth = new UnAuth(this.fullUrl);\n        return await unAuth.identifierExists(identifier);\n    }\n\n    /**\n     * Create a new Passage magic link for registration\n     * @param {string} identifier The Passage User's identifier\n     * @param {string} language the language string for localizing emails, if no lanuage or an invalid language is provided the application default lanuage will be used\n     * @return {Promise<PassageMagicLinkRequest>} MagicLink JSON payload\n     */\n    async newRegisterMagicLink(\n        identifier: string,\n        language?: string\n    ): Promise<PassageMagicLinkRequest> {\n        const magicLink = new MagicLink(this.fullUrl, this.tokenStore);\n        return await magicLink.newRegister(identifier, language);\n    }\n\n    /**\n     * Initiate new login with Passage Magic Link\n     * @param {string} identifier The Passage User's identifier\n     * @param {string} language the language string for localizing emails, if no lanuage or an invalid language is provided the application default lanuage will be used\n     * @return {Promise<PassageMagicLinkRequest>} MagicLink JSON payload\n     */\n    async newLoginMagicLink(\n        identifier: string,\n        language?: string\n    ): Promise<PassageMagicLinkRequest> {\n        const magicLink = new MagicLink(this.fullUrl, this.tokenStore);\n        return await magicLink.newLogin(identifier, language);\n    }\n\n    /**\n     * Activate a magic link when a user clicks the link. This function handles login and registration magic links.\n     *\n     * @param {string} userMagicLink\n     * @return {Promise<authResult>} equivalent to a login operation and will return a redirect_url and set the `psg_auth_token` in Local Storage\n     *\n     * @example\n     * ```javascript\n     * import Passage from '@passageidentity/passage-js';\n     *\n     * const passage = new Passage(app_id);\n     *\n     * await this.passage.magicLinkActivate(token)\n     *      .then((res: any) => {\n     *          location.href = res.redirectURL;\n     *      })\n     *      .catch(() => console.log(\"access token is invalid or has expired\"));\n     * ```\n     */\n    async magicLinkActivate(userMagicLink: string): Promise<authResult> {\n        const magicLink = new MagicLink(this.fullUrl, this.tokenStore);\n        return await magicLink.activate(userMagicLink);\n    }\n\n    /**\n     * Activate Passage MagicLink via webAuthn login\n     * @param {string} userMagicLink The current magicLink\n     * @return {Promise<authResult>} The authentication result\n     */\n    async magicLinkActivateWebAuthnLogin(userMagicLink: string): Promise<authResult> {\n        const magicLink = new MagicLink(this.fullUrl, this.tokenStore);\n        return await magicLink.activateWebAuthnLogin(userMagicLink);\n    }\n\n    /**\n     * Activate Passage MagicLink via webAuthn for a new device\n     * @param {string} userMagicLink The current magicLink\n     * @return {Promise<authResult>} The authentication result\n     */\n    async magicLinkActivateWebAuthnNewDevice(userMagicLink: string): Promise<authResult> {\n        const magicLink = new MagicLink(this.fullUrl, this.tokenStore);\n        return await magicLink.activateWebAuthnNewDevice(userMagicLink);\n    }\n    /**\n     * Look up a magic link by ID and check if it has been verified. This function is mostly commonly used to\n     * iteratively check if a user has clicked a magic link to login. Once the link has been verified,\n     * Passage will return authentication information via this endpoint. This enables cross-device login.\n     *\n     * @param {string} id unique ID for an magic link which is returned by functions that create a magic link\n     * @return {Promise<authResult>}\n     */\n    async getMagicLinkStatus(id: string): Promise<authResult> {\n        const magicLink = new MagicLink(this.fullUrl, this.tokenStore);\n        return await magicLink.getStatus(id);\n    }\n\n    /**\n     * getCurrentUser returns the current authenticated user.\n     * @return {User} the Passage User\n     */\n    getCurrentUser(): User {\n        return new User(this.appID, this.tokenStore);\n    }\n\n    /**\n     * getCurrentSession returns a Session object to manage the current user's session.\n     * @return {Session} the Passage Session\n     */\n    getCurrentSession(): Session {\n        return new Session(this.appID, this.tokenStore);\n    }\n\n    /**\n     * createUser creates a user in a 'pending' state.\n     * @param {CreateUserPayload} [payload] identifier and any optional user_metadata (where registration is set to true) to create the user in a pending state.\n     * @return {Promise<PassageUser>}\n     */\n    async createUser(payload: CreateUserPayload): Promise<PassageUser> {\n        const user = await fetch(`${this.fullUrl}/users`, {\n            headers: getHeaders(),\n            body: JSON.stringify({\n                ...payload,\n            }),\n            method: 'POST',\n        }).then(handleResponse);\n\n        return user.user;\n    }\n}\n","import BytesHelper from './BytesHelper.js';\nimport { authResult } from './Passage.js';\nimport AuthTokenHelper from './AuthTokenHelper.js';\nimport BrowserHelper from './BrowserHelper';\nimport { handleResponse } from './utils/HandleResponse.js';\nimport { PassageError, PassageErrorCode } from './PassageError.js';\nimport { _isFirefox98Win, _modifyAttestationObject } from './utils/FirefoxHandlers.js';\nimport { getHeaders } from './utils/GetHeaders.js';\nimport { ReadOnlyTokenStore, TokenStore } from './TokenStore.js';\nimport { storeResponseTokens } from './utils/StoreResponseTokens.js';\n\nconst bytesHelper = new BytesHelper();\nconst authTokenHelper = new AuthTokenHelper();\nconst browserHelper = new BrowserHelper();\ndeclare const navigator: Navigator;\n\n/**\n * SignUp assists in creating new users that can be authenticated\n * via Passage\n */\nexport default class SignUp {\n    apiUrl: string;\n    identifier: string;\n\n    /**\n     * SignUp Constructor initializing class vars apiUrl and identifier\n     * @param {string} baseUrl the Passage App's base URL\n     * @param {string} identifier\n     */\n    constructor(\n        baseUrl: string,\n        private tokenStore: TokenStore | ReadOnlyTokenStore,\n        identifier: string\n    ) {\n        this.apiUrl = baseUrl + '/register/';\n        this.identifier = identifier;\n    }\n\n    /**\n     * Initialize webAuthn authentication for SignUp\n     * @return {Promise<authResult>}\n     */\n    async withWebAuthn(): Promise<authResult> {\n        const { createPassKeySupported } = await browserHelper.getBrowserInfo();\n\n        const webAuthnStartResponse = await fetch(this.apiUrl + 'webauthn/start', {\n            headers: getHeaders(),\n            body: JSON.stringify({\n                identifier: this.identifier,\n            }),\n            method: 'POST',\n        }).then(handleResponse);\n\n        const credential: PublicKeyCredential | null = await navigator.credentials\n            .create({\n                publicKey: this._parsePublicKey(\n                    webAuthnStartResponse.handshake.challenge.publicKey\n                ),\n            })\n            .catch((_) => {\n                throw new PassageError('error parsing public key for webAuthn', {\n                    status: PassageErrorCode.PSGParsePublicKeyForLoginFailed,\n                    statusText: 'PSG Parse Public Key For Login Failed',\n                });\n            })\n            .then((credValue) => {\n                return credValue as PublicKeyCredential;\n            });\n        // @ts-ignore\n        let attestationObject = new Uint8Array(credential?.response.attestationObject);\n        if (_isFirefox98Win()) {\n            attestationObject = _modifyAttestationObject(attestationObject);\n        }\n        let transports: string[] = [];\n        // getTransports() is not defined in all browsers (i.e. Firefox)\n        // make sure the function is defined before trying to use it\n        if (\n            // @ts-ignore\n            credential?.response.getTransports &&\n            // @ts-ignore\n            typeof credential?.response.getTransports === 'function'\n        ) {\n            // @ts-ignore\n            transports = credential?.response.getTransports();\n        }\n        // @ts-ignore\n        const userID = webAuthnStartResponse.user.id;\n        const webAuthnFinishResponse = await fetch(this.apiUrl + 'webauthn/finish', {\n            headers: getHeaders(),\n            method: 'POST',\n            body: JSON.stringify({\n                user_id: userID,\n                handshake_id: webAuthnStartResponse.handshake.id,\n                handshake_response: {\n                    rawId: bytesHelper.encodeBytes(credential?.rawId!),\n                    id: credential?.id,\n                    type: credential?.type,\n                    response: {\n                        attestationObject: bytesHelper.encodeBytes(attestationObject),\n\n                        clientDataJSON: bytesHelper.encodeBytes(\n                            credential?.response.clientDataJSON!\n                        ),\n                    },\n                    transports: transports,\n                },\n                cred_type: createPassKeySupported ? 'passkey' : 'platform',\n            }),\n        })\n            .then(handleResponse)\n            .then((response) => storeResponseTokens(response, this.tokenStore));\n\n        authTokenHelper.setPsgCredID(userID, credential);\n        return webAuthnFinishResponse.auth_result;\n    }\n\n    /**\n     * Parse the public key via credential creation options\n     * @param {PublicKeyCredentialCreationOptions} publicKey\n     * @return {PublicKeyCredentialCreationOptions}\n     */\n    private _parsePublicKey(\n        publicKey: PublicKeyCredentialCreationOptions\n    ): PublicKeyCredentialCreationOptions {\n        publicKey.challenge = bytesHelper.decodeBytes(publicKey.challenge.toString());\n        publicKey.user.id = bytesHelper.decodeBytes(publicKey.user.id.toString());\n        // ###In case we want to add excludeList in the future###\n        /* if (publicKey.excludeCredentials) {\n            for (let i = 0; i < publicKey.excludeCredentials.length; i++) {\n                const e = publicKey.excludeCredentials[i]\n                e.id = bytesHelper.DecodeBytes(e.id)\n            }\n        }*/\n        return publicKey;\n    }\n}\n","/**\n * BytesHelper assists in encoding and decoding bytes\n */\nexport default class BytesHelper {\n    /**\n     * Encode bytes using array buffer\n     * @param {ArrayBufferLike} arrayBuffer The array buffer\n     * @return {string} Base64 URL string\n     */\n    encodeBytes(arrayBuffer: ArrayBufferLike): string {\n        const b64Str = btoa(String.fromCharCode(...new Uint8Array(arrayBuffer)));\n        const b64URLStr = b64Str.replace(/\\+/g, '-').replace(/\\//g, '_');\n        return removePadding(b64URLStr);\n    }\n\n    /**\n     * Decode bytes using a Base64 URL string\n     * @param {string} b64URLStr The Base64 URL string\n     * @return {Uint8Array} Array buffer\n     */\n    decodeBytes(b64URLStr: string): Uint8Array {\n        const b64Str = b64URLStr.replace(/-/g, '+').replace(/_/g, '/');\n        const b64StrWithoutPadding = removePadding(b64Str);\n        const arrayBuffer = Uint8Array.from(atob(b64StrWithoutPadding), (c) => c.charCodeAt(0));\n        return arrayBuffer;\n    }\n}\n\nconst removePadding = (s: string): string => {\n    const padIdx = s.indexOf('=');\n    return s.slice(0, padIdx === -1 ? s.length : padIdx);\n};\n","import BytesHelper from './BytesHelper.js';\nimport { PassageError, PassageErrorCode } from './PassageError.js';\nimport PassageWebAuthnResponse from './types/PassageWebAuthnResponse.js';\nimport Cookies from 'js-cookie';\nconst bytesHelper = new BytesHelper();\n\n/**\n * AuthTokenHelper assists in AuthToken management\n */\nexport default class AuthTokenHelper {\n    /**\n     * Check to see if Passage CredID exists in local storage as the key psg_cred_obj\n     * @param {PassageWebAuthnResponse} responseBody1 Passage API response\n     * @return {Promise<boolean>} True if Passage CredID exists, false if it does not\n     */\n    psgCredIDExists(responseBody1: PassageWebAuthnResponse): boolean {\n        // @ts-ignore\n        const userID = responseBody1.user.id;\n        // @ts-ignore\n        const allowCredentials = responseBody1.handshake.challenge.publicKey.allowCredentials;\n        const psgCredObj = this.getPsgCredObj();\n\n        if (!psgCredObj)\n            throw new PassageError('Could not get psg_cred_obj', {\n                status: PassageErrorCode.PSGCredObjectDoesNotExist,\n                statusText: 'PSG Cred Object Does Not Exist',\n            });\n\n        /** {\"userID\": \"credentialID\"} */\n        const psgCredID = JSON.parse(psgCredObj)[userID];\n        if (!psgCredID) {\n            return false;\n        }\n        const psgCredIdExists: boolean = allowCredentials.find((credential: Credential) => {\n            if (\n                bytesHelper.encodeBytes(bytesHelper.decodeBytes(credential.id)) ===\n                bytesHelper.encodeBytes(bytesHelper.decodeBytes(psgCredID))\n            ) {\n                return true;\n            }\n        });\n\n        return psgCredIdExists;\n    }\n\n    /**\n     *\n     * @param {string} userID The Passage userID to be used as the key in psg_cred_obj\n     * @param {Credential | null} credential The credential to be associated with the userID in localstorage\n     * as the value associated with the userID key in psg_cred_obj\n     */\n    setPsgCredID(userID: string, credential: Credential | null): void {\n        if (!credential)\n            throw new PassageError(`Could not get user's credential`, {\n                status: PassageErrorCode.PSGCouldNotGetUserCredential,\n                statusText: 'PSG Could Not Get User Credential',\n            });\n\n        const passageCredentialObject = this.getPsgCredObj();\n\n        if (passageCredentialObject) {\n            const parsedCredentialObject: { [key: string]: string } =\n                JSON.parse(passageCredentialObject);\n            parsedCredentialObject[userID] = credential?.id!;\n            this.setPsgCredObj(JSON.stringify(parsedCredentialObject));\n        } else {\n            this.setPsgCredObj(JSON.stringify({ [userID]: credential?.id }));\n        }\n    }\n    /**\n     * Remove a credntial from the psg_cred_obj, if it exists\n     * @param {string} credID The credential to remove\n     */\n    removeCredential(credID: string): void {\n        const passageCredentialObject = this.getPsgCredObj();\n        if (passageCredentialObject === undefined) {\n            return;\n        }\n        const parsedCredentialObject: { [key: string]: string } =\n            JSON.parse(passageCredentialObject);\n        Object.keys(parsedCredentialObject).forEach((userID) => {\n            if (parsedCredentialObject[userID] === credID) {\n                delete parsedCredentialObject[userID];\n            }\n        });\n        this.setPsgCredObj(JSON.stringify(parsedCredentialObject));\n    }\n    /**\n     * Get psg_cred_obj from cookies or localstorage\n     * if found in localstorage copy to cookies\n     * if found in cookies, extend expiration\n     * @return {string | undefined} the psg_cred_obj string or undefined\n     */\n    getPsgCredObj(): string | undefined {\n        const cookieCredObj = Cookies.get('psg_cred_obj');\n        const localStorageCredObj = localStorage.getItem('psg_cred_obj');\n        if (cookieCredObj !== undefined) {\n            // extend the cookie's expiration\n            Cookies.set('psg_cred_obj', cookieCredObj, { expires: 400, sameSite: 'Strict' });\n            // mirror back to localstorage\n            if (localStorageCredObj === null) {\n                localStorage.setItem('psg_cred_obj', cookieCredObj);\n            }\n            return cookieCredObj;\n        }\n        if (localStorageCredObj !== null) {\n            // mirror to cookies\n            Cookies.set('psg_cred_obj', localStorageCredObj, { expires: 400, sameSite: 'Strict' });\n            return localStorageCredObj;\n        }\n        return undefined;\n    }\n    /**\n     * Sets psg_cred_obj on cookies and localstorage\n     * @param {string} value The string to store in psg_cred_obj\n     */\n    private setPsgCredObj(value: string): void {\n        Cookies.set('psg_cred_obj', value, { expires: 400, sameSite: 'Strict' });\n        localStorage.setItem('psg_cred_obj', value);\n    }\n}\n","/* eslint-disable no-unused-vars */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\ntype AtLeast<T, K extends keyof T> = Partial<T> & Pick<T, K>;\ntype RequiredResponse = Partial<Response> & AtLeast<Response, 'status' | 'statusText'>;\n\n/**\n * PassageError assists with error handling.\n */\nexport class PassageError extends Error {\n    public statusCode: number;\n    public statusText: string;\n    public message: string;\n    public name: string;\n\n    /**\n     * @param {string} psgErrorResponse a custom Passage error message.\n     * @param {RequiredResponse} res response or status and statusText used to generate error.\n     */\n    constructor(psgErrorResponse: string, res: RequiredResponse) {\n        super();\n        this.name = 'PassageError';\n        this.statusCode = res.status;\n        this.statusText = res.statusText;\n        this.message = this._parsePsgErrorResponse(psgErrorResponse);\n    }\n\n    /**\n     * _poarsePsgErrorResponse parses the custom Passage error response message.\n     * @param {any} psgErrorResponse the custom Passage error response.\n     * @return {string} the Passage error response from server or input string.\n     */\n    private _parsePsgErrorResponse(psgErrorResponse: any): string {\n        try {\n            psgErrorResponse = JSON.parse(psgErrorResponse);\n            if (psgErrorResponse.error) {\n                return psgErrorResponse.error;\n            }\n            return '';\n        } catch {\n            return psgErrorResponse;\n        }\n    }\n}\n\nexport enum PassageErrorCode {\n    /** The request has more than one possible response. The user agent or user should choose one of them. */\n    MultipleChoice = 300,\n    /** The URL of the requested resource has been changed permanently. The new URL is given in the response. */\n    MovedPermanantly,\n    /** This response code means that the URI of requested resource has been changed temporarily. Further changes in the URI might be made in the future. Therefore, this same URI should be used by the client in future requests. */\n    Found,\n    /** The server sent this response to direct the client to get the requested resource at another URI with a GET request. */\n    SeeOther,\n    /** This is used for caching purposes. It tells the client that the response has not been modified, so the client can continue to use the same cached version of the response. */\n    NotModified,\n    /** The server sends this response to direct the client to get the requested resource at another URI with same method that was used in the prior request. This has the same semantics as the 302 Found HTTP response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the second request. */\n    TemporaryRedirect = 307,\n    /** This means that the resource is now permanently located at another URI, specified by the Location: HTTP Response header. This has the same semantics as the 301 Moved Permanently HTTP response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the second request. */\n    PermanentRedirect,\n    /** The server could not understand the request due to invalid syntax. */\n    BadRequest = 400,\n    /** Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response. */\n    Unauthorized,\n    /** This response code is reserved for future use. The initial aim for creating this code was using it for digital payment systems, however this status code is used very rarely and no standard convention exists. */\n    PaymentRequired,\n    /** The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server. */\n    Forbidden,\n    /** The server can not find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. */\n    NotFound,\n    /** The request method is known by the server but is not supported by the target resource. For example, an API may not allow calling DELETE to remove a resource. */\n    MethodNotAllowed,\n    /** This response is sent when the web server, after performing server-driven content negotiation, doesn't find any content that conforms to the criteria given by the user agent. */\n    NotAcceptable,\n    /** This is similar to 401 Unauthorized but authentication is needed to be done by a proxy. */\n    ProxyAuthenticationRequired,\n    /** This response is sent on an idle connection by some servers, even without any previous request by the client. It means that the server would like to shut down this unused connection. This response is used much more since some browsers, like Chrome, Firefox 27+, or IE9, use HTTP pre-connection mechanisms to speed up surfing. Also note that some servers merely shut down the connection without sending this message. */\n    RequestTimeout,\n    /** This response is sent when a request conflicts with the current state of the server. */\n    Conflict,\n    /** This response is sent when the requested content has been permanently deleted from server, with no forwarding address. Clients are expected to remove their caches and links to the resource. The HTTP specification intends this status code to be used for \"limited-time, promotional services\". APIs should not feel compelled to indicate resources that have been deleted with this status code. */\n    Gone,\n    /** Server rejected the request because the Content-Length header field is not defined and the server requires it. */\n    LengthRequired,\n    /** The client has indicated preconditions in its headers which the server does not meet. */\n    PreconditionFailed,\n    /** Request entity is larger than limits defined by server. The server might close the connection or return an Retry-After header field. */\n    PayloadTooLarge,\n    /** The URI requested by the client is longer than the server is willing to interpret. */\n    URITooLong,\n    /** The media format of the requested data is not supported by the server, so the server is rejecting the request. */\n    UnsupportedMediaType,\n    /** The range specified by the Range header field in the request cannot be fulfilled. It's possible that the range is outside the size of the target URI's data. */\n    RangeNotSatisfiable,\n    /** This response code means the expectation indicated by the Expect request header field cannot be met by the server. */\n    ExpectationFailed,\n    /** The request was directed at a server that is not able to produce a response. This can be sent by a server that is not configured to produce responses for the combination of scheme and authority that are included in the request URI. */\n    MisdirectedRequest = 421,\n    /** The request was well-formed but was unable to be followed due to semantic errors. */\n    UnprocessableEntity,\n    /** The resource that is being accessed is locked. */\n    Locked,\n    /** The request failed due to failure of a previous request. */\n    FailedDependency,\n    /** Indicates that the server is unwilling to risk processing a request that might be replayed. */\n    TooEarly,\n    /** The server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol. The server sends an Upgrade header in a 426 response to indicate the required protocol(s). */\n    UpgradeRequired,\n    /** The origin server requires the request to be conditional. This response is intended to prevent the 'lost update' problem, where a client GETs a resource's state, modifies it and PUTs it back to the server, when meanwhile a third party has modified the state on the server, leading to a conflict. */\n    PreconditionRequired = 428,\n    /** The user has sent too many requests in a given amount of time (\"rate limiting\"). */\n    TooManyRequests,\n    /** The server is unwilling to process the request because its header fields are too large. The request may be resubmitted after reducing the size of the request header fields. */\n    RequestHeaderFieldsTooLarge = 431,\n    /** The user agent requested a resource that cannot legally be provided, such as a web page censored by a government. */\n    UnavailableForLegalReasons = 451,\n\n    /** The server has encountered a situation it does not know how to handle. */\n    InternalServerError = 500,\n    /** The request method is not supported by the server and cannot be handled. The only methods that servers are required to support (and therefore that must not return this code) are GET and HEAD. */\n    NotImplemented,\n    /** This error response means that the server, while working as a gateway to get a response needed to handle the request, got an invalid response. */\n    BadGateway,\n    /** The server is not ready to handle the request. */\n    ServiceUnavailable,\n    /** This error response is given when the server is acting as a gateway and cannot get a response in time. */\n    GatewayTimeout,\n    /** The HTTP version used in the request is not supported by the server. */\n    HTTPVersionNotSupported,\n    /** The server has an internal configuration error: the chosen variant resource is configured to engage in transparent content negotiation itself, and is therefore not a proper end point in the negotiation process. */\n    VariantAlsoNegotiates,\n    /** The method could not be performed on the resource because the server is unable to store the representation needed to successfully complete the request. */\n    InsufficientStorage,\n    /** The server detected an infinite loop while processing the request. */\n    LoopDetected,\n    /** Further extensions to the request are required for the server to fulfill it. */\n    NotExtended = 510,\n    /** Indicates that the client needs to authenticate to gain network access. */\n    NetworkAuthenticationRequired,\n\n    /** The psg_cred_obj does not exist in the webAuthn allow list */\n    PSGCredObjectDoesNotExist = 700,\n    /** Parsing the public key for new device has failed */\n    PSGParsePublicKeyForNewDeviceFailed,\n    /** Parsing the public key for login has failed */\n    PSGParsePublicKeyForLoginFailed,\n    /** Could not get user's credential */\n    PSGCouldNotGetUserCredential,\n    /** Indicates that the user needs to authenticate */\n    PSGLoginRequired,\n}\n","import UaParser from 'ua-parser-js';\n\nexport interface BrowserInfo {\n    createPassKeySupported: boolean;\n    getPassKeySupported: boolean;\n    conditionalUISupported: boolean;\n}\n\n/**\n * BrowserHelper assists in detecting what features the browser supports\n */\nexport default class BrowserHelper {\n    userAgent: UaParser.UAParserInstance;\n\n    /**\n     * Constructor configuring the CredentialHelper class' attributes\n     */\n    constructor() {\n        this.userAgent = new UaParser();\n    }\n\n    /**\n     * Detect if Browser can create a PassKey\n     * @return {boolean}\n     */\n    async getBrowserInfo(): Promise<BrowserInfo> {\n        return {\n            createPassKeySupported: await this._canBrowserCreatePassKey(),\n            getPassKeySupported: await this._canBrowserGetPasskey(),\n            conditionalUISupported: await this._isConditionalMediationAvailable(),\n        };\n    }\n\n    /**\n     * Detect if Browser can create a PassKey\n     * @return {boolean}\n     */\n    private async _canBrowserCreatePassKey(): Promise<boolean> {\n        // iOS Supported\n        if (this._isiOSPasskeySupported()) {\n            return true;\n        }\n\n        // MacOS Safari Supported\n        if (this._isMacPasskeySupported()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Detect if Browser can use Passkeys\n     * @return {boolean}\n     */\n    private _canBrowserGetPasskey(): Promise<boolean> {\n        // iOS Supported\n        if (this._isiOSPasskeySupported()) {\n            return Promise.resolve(true);\n        }\n\n        // MacOS Safari Supported\n        if (this._isMacPasskeySupported()) {\n            return Promise.resolve(true);\n        }\n\n        if (this._isDesktopChrome108()) {\n            return Promise.resolve(true);\n        }\n\n        return Promise.resolve(false);\n    }\n\n    /**\n     * Detect if Browser has implemented Conditional Mediation\n     * @return {boolean}\n     */\n    private async _isConditionalMediationAvailable(): Promise<boolean> {\n        return false;\n        /*\n        // Running this code on iOS breaks user gestures entirely\n        if (!PublicKeyCredential.isConditionalMediationAvailable) {\n            return false;\n        }\n\n        return await PublicKeyCredential.isConditionalMediationAvailable();\n        */\n    }\n\n    /**\n     * Detect if Browser is running on iOS16 or greater\n     * @return {boolean}\n     */\n    private _isiOSPasskeySupported(): boolean {\n        return (\n            this.userAgent.getOS().name == 'iOS' &&\n            parseFloat(this.userAgent.getOS().version || '') >= 16\n        );\n    }\n\n    /**\n     * Detect if Browser is running MacOS and Safari 16 or greater\n     * @return {boolean}\n     */\n    private _isMacPasskeySupported(): boolean {\n        return (\n            this.userAgent.getBrowser().name == 'Safari' &&\n            parseFloat(this.userAgent.getBrowser().version || '') >= 16 &&\n            this.userAgent.getOS().name == 'Mac OS'\n        );\n    }\n\n    /**\n     * Detect if Browser is running Chrome 108 desktop or greater\n     * @return {boolean}\n     */\n    private _isDesktopChrome108(): boolean {\n        return (\n            this.userAgent.getBrowser().name == 'Chrome' &&\n            parseFloat(this.userAgent.getBrowser().version || '') >= 108\n        );\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { PassageError } from '../PassageError';\n\n/**\n * handeResponse checks the response from the request and initiates a PassageError if needed\n * @param {Response} res The response from the request\n * @return {Promise<PassageError | any>}\n */\nexport async function handleResponse(res: Response): Promise<PassageError | any> {\n    if (!res.ok) {\n        return await res.text().then((psgErrorResponse) => {\n            throw new PassageError(psgErrorResponse, res);\n        });\n    }\n    return res.json();\n}\n","/**\n * Check to see if Firefox98 on Windows\n * @return {boolean}\n */\nexport function _isFirefox98Win(): boolean {\n    const isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n    const match = window.navigator.userAgent.match(/Firefox\\/([0-9]+)\\./);\n    const firefoxVersion = match ? parseInt(match[1]) : 0;\n    const isWindows = navigator.platform.indexOf('Win') !== -1;\n    return isWindows && isFirefox && firefoxVersion === 98;\n}\n\n/**\n * Modify attestation object for firefox98 on windows\n * @param {Uint8Array} object\n * @return {Uint8Array}\n */\nexport function _modifyAttestationObject(object: Uint8Array): Uint8Array {\n    const first = new Uint8Array(68);\n    first.set(object.slice(0, 68));\n    const rest = new Uint8Array(object.byteLength - 68);\n    rest.set(object.slice(68, object.byteLength));\n    const buffer = new Uint8Array(15);\n    const newFirefoxBuffer = new Uint8Array(first.byteLength + buffer.byteLength + rest.byteLength);\n    newFirefoxBuffer.set(first, 0);\n    newFirefoxBuffer.set(buffer, first.byteLength);\n    newFirefoxBuffer.set(rest, first.byteLength + buffer.byteLength);\n    const updateLength = newFirefoxBuffer[30] + 15;\n    newFirefoxBuffer.set([updateLength], 30);\n    return newFirefoxBuffer;\n}\n","import { env } from '../config/Environment';\n/**\n * getHeaders builds Headers with an SDK version, if available\n * @param {HeadersInit} init Initial key-value pairs to include in headers\n * @return {Headers}\n */\nexport function getHeaders(init?: HeadersInit): Headers {\n    const headers = new Headers(init);\n    const version = env.version;\n    if (version) {\n        headers.append('Passage-Version', version);\n    }\n    return headers;\n}\n","import { EnvConfig } from './EnvironmentModel.js';\nimport envConfig from './env_config.js';\n\nexport const env = envConfig as EnvConfig;\n","export default {URL: \"https://auth.passage.id\", version: \"@passageidentity/passage-js 3.1.0\", CAPTURE_EVENT_URL: \"https://us-central1-passage-prod.cloudfunctions.net/capture-event\", SENTRY_RELEASE: \"passage-js@3.1.0-prod\",SENTRY_PROJECT: \"passage-js\",  SENTRY_PROJECT_DSN: \"\", SENTRY_PROJECT_ENV: \"prod\", SENTRY_PROJECT_VERSION: \"3.1.0\"};\n","import { authResult } from '../Passage.js';\nimport { isFullTokenStore, ReadOnlyTokenStore, TokenStore } from '../TokenStore.js';\n\ntype AuthResponse = {\n    auth_result: authResult;\n};\n\nconst isAuthResponse = (res: unknown): res is AuthResponse => {\n    return (\n        typeof res === 'object' &&\n        res !== null &&\n        typeof (res as AuthResponse).auth_result !== 'undefined'\n    );\n};\n\n/**\n * storeRefreshToken stores a refresh token from a response body if possible\n * @param {unknown} res The response from the request\n * @param {TokenStore} tokenStore token Store being used\n * @return {unknown}\n */\nexport function storeResponseTokens<T = unknown>(\n    res: T,\n    tokenStore: TokenStore | ReadOnlyTokenStore\n): T {\n    if (!isAuthResponse(res)) {\n        console.warn('Not a valid auth response');\n        return res;\n    }\n    if (isFullTokenStore(tokenStore)) {\n        tokenStore.setTokens(res.auth_result);\n    }\n    return res;\n}\n","import { authResult, PassageError, PassageErrorCode } from '.';\n/**\n * Base class for implementing read-only token stores. getAuthToken() is the only required function to implement.\n * If a Passage object is built with a read-only token store it will not handle any token storage.\n */\nexport abstract class ReadOnlyTokenStore {\n    /**\n     * This method returns a token to be used for authenticated operations on the User class.\n     * This can return a Passage-issued JWT or a third-party bearer token for use with authorizers.\n     * @returns {Promise<string>} Passage-issued JWT or third-party bearer token\n     */\n    abstract getAuthToken(): Promise<string>;\n\n    /**\n     * This method retrieves a Passage refresh token from storage for use with the Session class for refreshing Passage sessions.\n     * If this method returns undefined then Session will not handle any refresh token logic.\n     * Only return Passage-issued refresh tokens from this method.\n     * @return {Promise<string | undefined>} refresh token, or undefined if not using refresh tokens.\n     */\n    getRefreshToken(): Promise<string | undefined> {\n        return Promise.resolve(undefined);\n    }\n}\n\n/**\n * Base class for implementing full read-write token stores.\n */\nexport abstract class TokenStore extends ReadOnlyTokenStore {\n    /**\n     * This method is responsible for hanlding the storage of Passage-issues JWTs and refresh tokens.\n     * @param {authResult} authResult The authResult object returned from Passage Login, Register, Magic Link, and token refresh operations.\n     */\n    abstract setTokens(authResult: authResult): Promise<void>;\n\n    /**\n     * This method is responsible for clearing tokens from storage when a sign-out operation is executed on the Session class.\n     * @return {Promise<void>}\n     */\n    clearTokens(): Promise<void> {\n        return Promise.resolve();\n    }\n}\n\n/* eslint-disable require-jsdoc */\n/* eslint-disable prefer-promise-reject-errors */\nexport class PassageTokenStore extends TokenStore {\n    private noLocalStorage = typeof window === 'undefined';\n    private noLocalStorageError = (f: string): string =>\n        `Failed to access localStorage or cookies. Must be run client-side.`;\n\n    getAuthToken(): Promise<string> {\n        if (this.noLocalStorage) {\n            return Promise.reject(this.noLocalStorageError('getAuthToken'));\n        }\n        const localToken = localStorage.getItem('psg_auth_token');\n        if (localToken === null) {\n            const err = new PassageError('Login required', {\n                status: PassageErrorCode.PSGLoginRequired,\n                statusText: 'Login required',\n            });\n            return Promise.reject(err);\n        }\n        return Promise.resolve(localToken);\n    }\n\n    private setAuthToken(authToken: string): Promise<void> {\n        if (this.noLocalStorage) {\n            return Promise.reject(this.noLocalStorageError('setAuthToken'));\n        }\n        localStorage.setItem('psg_auth_token', authToken);\n        const leaveUnsecure = !this._isHttps() && this._isLocalHost();\n        document.cookie = `psg_auth_token = ${authToken}; path=/ ${leaveUnsecure ? '' : ';secure'}`;\n        return Promise.resolve();\n    }\n\n    getRefreshToken(): Promise<string | undefined> {\n        if (this.noLocalStorage) {\n            Promise.reject(this.noLocalStorageError('getRefreshToken'));\n        }\n        const localToken = localStorage.getItem('psg_refresh_token');\n        if (localToken === null) {\n            return Promise.resolve(undefined);\n        }\n        return Promise.resolve(localToken);\n    }\n\n    setRefreshToken(refreshToken: string): Promise<void> {\n        if (this.noLocalStorage) {\n            Promise.reject(this.noLocalStorageError('setRefreshToken'));\n        }\n        localStorage.setItem('psg_refresh_token', refreshToken);\n        return Promise.resolve();\n    }\n\n    setTokens(authResult: authResult): Promise<void> {\n        if (this.noLocalStorage) {\n            Promise.reject(this.noLocalStorageError('setTokens'));\n        }\n        this.setAuthToken(authResult.auth_token);\n        if (authResult.refresh_token) {\n            this.setRefreshToken(authResult.refresh_token);\n        }\n        return Promise.resolve();\n    }\n\n    clearTokens(): Promise<void> {\n        if (this.noLocalStorage) {\n            Promise.reject(this.noLocalStorageError('clearTokens'));\n        }\n        localStorage.removeItem('psg_auth_token');\n        document.cookie = 'psg_auth_token=; expires=Thu, 01 Jan 1970 00:00:00 UTC;';\n        localStorage.removeItem('psg_refresh_token');\n        return Promise.resolve();\n    }\n\n    /**\n     * Determines if localhost\n     * @return {boolean} The sum of the two numbers.\n     */\n    private _isLocalHost(): boolean {\n        return Boolean(\n            window.location.hostname === 'localhost' ||\n                // [::1] is the IPv6 localhost address.\n                window.location.hostname === '[::1]' ||\n                // 127.0.0.1/8 is considered localhost for IPv4.\n                window.location.hostname.match(\n                    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n                )\n        );\n    }\n\n    /**\n     * Determines if protocol being used is HTTPS\n     * @return {boolean}\n     */\n    private _isHttps(): boolean {\n        return location.protocol === 'https:';\n    }\n}\n\nexport function isFullTokenStore(store: ReadOnlyTokenStore | TokenStore): store is TokenStore {\n    return (store as TokenStore).setTokens !== undefined;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n// import AuthTokenHelper from './AuthTokenHelper.js';\nimport BytesHelper from './BytesHelper.js';\nimport { authResult } from './Passage.js';\nimport { PassageError, PassageErrorCode } from './PassageError.js';\nimport { ReadOnlyTokenStore, TokenStore } from './TokenStore.js';\nimport { getHeaders } from './utils/GetHeaders.js';\nimport { handleResponse } from './utils/HandleResponse.js';\nimport { storeResponseTokens } from './utils/StoreResponseTokens.js';\n\nconst bytesHelper = new BytesHelper();\n// const authTokenHelper = new AuthTokenHelper();\ndeclare const navigator: Navigator;\n\n/**\n * LogIn assists with authenticating Passage Users via WebAuthn\n */\nexport default class LogIn {\n    apiUrl: string;\n    identifier: string;\n\n    /**\n     * LogIn constructor initializing apiURL and identifier class vars\n     * @param {string} baseUrl\n     * @param {strting} identifier\n     */\n    constructor(\n        baseUrl: string,\n        private tokenStore: TokenStore | ReadOnlyTokenStore,\n        identifier?: string\n    ) {\n        this.apiUrl = baseUrl + '/login/';\n        this.identifier = identifier ?? '';\n    }\n\n    /**\n     * Begin authentication via WebAuthn\n     * @return {Promise<authResult>}\n     */\n    async withWebAuthn(): Promise<authResult> {\n        const identifierBody = JSON.stringify({\n            identifier: this.identifier,\n        });\n        const body = this.identifier ? identifierBody : undefined;\n        const webAuthnStartResponse = await fetch(this.apiUrl + 'webauthn/start', {\n            headers: getHeaders(),\n            method: 'POST',\n            body,\n        }).then(handleResponse);\n\n        /* const psgCredIDExists = await authTokenHelper.psgCredIDExists(webAuthnStartResponse);\n        if (!psgCredIDExists) {\n            throw new PassageError('psg_cred_obj does not exist in the allow list', {\n                status: PassageErrorCode.PSGCredObjectDoesNotExist,\n                statusText: 'psg_cred_obj does not exist in the allow list',\n            });\n        } */\n\n        const assertion: PublicKeyCredential | null = await navigator.credentials\n            .get({\n                publicKey: this._parsePublicKey(\n                    webAuthnStartResponse.handshake.challenge.publicKey\n                ),\n            })\n            .catch((err) => {\n                throw new PassageError('error parsing public key for webAuthn', {\n                    status: PassageErrorCode.PSGParsePublicKeyForLoginFailed,\n                    statusText: 'PSG Parse Public Key For Login Failed',\n                });\n            })\n            .then((credValue) => {\n                return credValue as PublicKeyCredential;\n            });\n\n        if (!assertion) {\n            return {\n                auth_token: '',\n                redirect_url: '',\n            };\n        }\n        const webAuthnFinishResponse = await fetch(this.apiUrl + 'webauthn/finish', {\n            headers: getHeaders(),\n            method: 'POST',\n            body: JSON.stringify({\n                user_id: this.identifier ? webAuthnStartResponse.user.id : undefined,\n                handshake_id: webAuthnStartResponse.handshake.id,\n                handshake_response: {\n                    id: assertion.id,\n                    rawId: bytesHelper.encodeBytes(assertion.rawId),\n                    type: assertion.type,\n                    response: {\n                        clientDataJSON: bytesHelper.encodeBytes(assertion.response.clientDataJSON),\n                        authenticatorData: bytesHelper.encodeBytes(\n                            // @ts-ignore\n                            assertion.response.authenticatorData\n                        ),\n                        // @ts-ignore\n                        signature: bytesHelper.encodeBytes(assertion.response.signature),\n                        // @ts-ignore\n                        userHandle: bytesHelper.encodeBytes(assertion.response.userHandle),\n                    },\n                },\n            }),\n        })\n            .then(handleResponse)\n            .then((response) => storeResponseTokens(response, this.tokenStore));\n\n        // @ts-ignore\n        // const userID = String.fromCharCode(...new Uint8Array(assertion.response.userHandle));\n        // authTokenHelper.setPsgCredID(userID, assertion);\n        return webAuthnFinishResponse.auth_result;\n    }\n\n    /**\n     * Parse the public key via credential request options\n     * @param {PublicKeyCredentialRequestOptions} publicKey\n     * @return {PublicKeyCredentialRequestOptions}\n     */\n    private _parsePublicKey(\n        publicKey: PublicKeyCredentialRequestOptions\n    ): PublicKeyCredentialRequestOptions {\n        publicKey.challenge = bytesHelper.decodeBytes(publicKey.challenge.toString());\n        if (publicKey.allowCredentials) {\n            for (let i = 0; i < publicKey.allowCredentials.length; i++) {\n                const e = publicKey.allowCredentials[i];\n                e.id = bytesHelper.decodeBytes(e.id.toString());\n            }\n            return publicKey;\n        }\n        return publicKey;\n    }\n}\n","import { PassageAppInfo } from './types/PassageApp';\nimport { PassageUser } from './types/PassageUser';\nimport { getHeaders } from './utils/GetHeaders';\nimport { handleResponse } from './utils/HandleResponse';\n\n/**\n * UnAuth assists in determining whether or not an identifier exists\n * (i.e. if the user is unauthenticated)\n */\nexport default class UnAuth {\n    apiUrl: string;\n\n    /**\n     * UnAuth constructor assigning apiURL\n     * @param {string} baseUrl App's base URL\n     */\n    constructor(baseUrl: string) {\n        this.apiUrl = baseUrl;\n    }\n\n    /**\n     * Get the App's info from Passage\n     * @return {Promise<PassageAppInfo>}\n     */\n    async appInfo(): Promise<PassageAppInfo> {\n        const appInfo = await fetch(this.apiUrl, {\n            headers: getHeaders(),\n            method: 'GET',\n        }).then(handleResponse);\n\n        return appInfo.app;\n    }\n\n    /**\n     * Checks to see if the identifier exists\n     * @param {string} identifier\n     * @return {Promise}\n     */\n    async identifierExists(identifier: string): Promise<PassageUser> {\n        const identifierExists = await fetch(\n            this.apiUrl + '/users?identifier=' + encodeURIComponent(identifier),\n            {\n                headers: getHeaders(),\n                method: 'GET',\n            }\n        ).then(handleResponse);\n\n        return identifierExists.user;\n    }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport BytesHelper from './BytesHelper.js';\nimport { authResult } from './Passage.js';\nimport AuthTokenHelper from './AuthTokenHelper.js';\nimport { PassageMagicLinkRequest } from './types/PassageMagicLinkRequest.js';\nimport { handleResponse } from './utils/HandleResponse.js';\nimport { PassageError, PassageErrorCode } from './PassageError.js';\nimport { _isFirefox98Win, _modifyAttestationObject } from './utils/FirefoxHandlers.js';\nimport { getHeaders } from './utils/GetHeaders.js';\nimport { ReadOnlyTokenStore, TokenStore } from './TokenStore.js';\nimport { storeResponseTokens } from './utils/StoreResponseTokens.js';\n\nconst bytesHelper = new BytesHelper();\nconst authTokenHelper = new AuthTokenHelper();\ndeclare const navigator: Navigator;\n\n/**\n * MagicLink assists with Passage MagicLink functionality for\n * authentication and registration\n */\nexport default class MagicLink {\n    apiUrl: string;\n\n    /**\n     * Constructor for Passage's magicLink\n     * @param {string} baseUrl the base URL for the Passage app\n     */\n    constructor(baseUrl: string, private tokenStore: TokenStore | ReadOnlyTokenStore) {\n        this.apiUrl = baseUrl;\n    }\n\n    /**\n     * Process a new registration via Passage's magicLink\n     * @param {string} identifier the Passage user's identifier (email/phone)\n     * @param {string?} language the language string for localizing emails, if no lanuage or an invalid language is provided the application default lanuage will be used\n     * @return {PassageMagicLinkRequest}\n     */\n    async newRegister(identifier: string, language?: string): Promise<PassageMagicLinkRequest> {\n        const newRegisterResponse = await fetch(this.apiUrl + '/register/magic-link', {\n            headers: getHeaders(),\n            method: 'POST',\n            body: JSON.stringify({\n                identifier: identifier,\n                magic_link_path: window.location.pathname,\n                language,\n            }),\n        }).then(handleResponse);\n\n        return newRegisterResponse.magic_link;\n    }\n\n    /**\n     * Process a new login via Passage magicLink\n     * @param {string} identifier the Passage user's identifier (phone/email)\n     * @param {string?} language the language string for localizing emails, if no lanuage or an invalid language is provided the application default lanuage will be used\n     * @return {PassageMagicLinkRequest}\n     */\n    async newLogin(identifier: string, language?: string): Promise<PassageMagicLinkRequest> {\n        const newLoginResponse = await fetch(this.apiUrl + '/login/magic-link', {\n            headers: getHeaders(),\n            method: 'POST',\n            body: JSON.stringify({\n                identifier: identifier,\n                magic_link_path: window.location.pathname,\n                language,\n            }),\n        }).then(handleResponse);\n\n        return newLoginResponse.magic_link;\n    }\n\n    /**\n     * Get status of a Passage magicLink\n     * @param {string} id The magicLink ID\n     * @return {Promise<authResult>}\n     */\n    async getStatus(id: string): Promise<authResult> {\n        const magicLinkStatusResponse = await fetch(this.apiUrl + '/magic-link/status', {\n            headers: getHeaders(),\n            method: 'POST',\n            body: JSON.stringify({\n                id: id,\n            }),\n        })\n            .then(handleResponse)\n            .then((response) => storeResponseTokens(response, this.tokenStore));\n\n        return magicLinkStatusResponse.auth_result;\n    }\n\n    /**\n     * Activate Passage magicLink via Passage's API\n     * @param {string} magicLink The magicLink to be activated\n     * @return {Promise<authResult>}\n     */\n    async activate(magicLink: string): Promise<authResult> {\n        const activateMagicLinkResponse = await fetch(this.apiUrl + '/magic-link/activate', {\n            headers: getHeaders(),\n            method: 'PATCH',\n            body: JSON.stringify({\n                magic_link: magicLink,\n            }),\n        })\n            .then(handleResponse)\n            .then((response) => storeResponseTokens(response, this.tokenStore));\n\n        return activateMagicLinkResponse.auth_result;\n    }\n\n    /**\n     * Activate a Passage magicLink via WebAuthn\n     * @param {string} magicLink The magicLink to be activated via webAuthn\n     * @return {Promise<authResult>}\n     */\n    async activateWebAuthnLogin(magicLink: string): Promise<authResult> {\n        const webAuthnStartResponse = await fetch(\n            this.apiUrl + '/magic-link/webauthn/login/start',\n            {\n                headers: getHeaders(),\n                body: JSON.stringify({\n                    magic_link: magicLink,\n                }),\n                method: 'POST',\n            }\n        ).then(handleResponse);\n\n        const psgCredIDExists = await authTokenHelper.psgCredIDExists(webAuthnStartResponse);\n        if (!psgCredIDExists) {\n            throw new PassageError('psg_cred_obj does not exist in the allow list', {\n                status: PassageErrorCode.PSGCredObjectDoesNotExist,\n                statusText: 'Not Found',\n            });\n        }\n\n        const assertion: Credential | null = await navigator.credentials\n            .get({\n                publicKey: this._parsePublicKeyLogin(\n                    webAuthnStartResponse.handshake.challenge.publicKey\n                ),\n            })\n            .catch((_) => {\n                throw new PassageError('could not parse publickey for login', {\n                    status: PassageErrorCode.PSGParsePublicKeyForLoginFailed,\n                    statusText: 'PSG Parse Public Key For Login Failed',\n                });\n            });\n\n        if (!assertion) {\n            return {\n                auth_token: '',\n                redirect_url: '',\n            };\n        }\n\n        const webAuthnFinishResponse = await fetch(\n            this.apiUrl + '/magic-link/webauthn/login/finish',\n            {\n                headers: getHeaders(),\n                method: 'POST',\n                body: JSON.stringify({\n                    magic_link: magicLink,\n                    user_id: webAuthnStartResponse.user.id,\n                    handshake_id: webAuthnStartResponse.handshake.id,\n                    handshake_response: {\n                        id: assertion.id,\n                        // @ts-ignore\n                        rawId: bytesHelper.encodeBytes(assertion.rawId),\n                        type: assertion.type,\n                        response: {\n                            clientDataJSON: bytesHelper.encodeBytes(\n                                // @ts-ignore\n                                assertion.response.clientDataJSON\n                            ),\n                            authenticatorData: bytesHelper.encodeBytes(\n                                // @ts-ignore\n                                assertion.response.authenticatorData\n                            ),\n                            // @ts-ignore\n                            signature: bytesHelper.encodeBytes(assertion.response.signature),\n                            // @ts-ignore\n                            userHandle: bytesHelper.encodeBytes(assertion.response.userHandle),\n                        },\n                    },\n                }),\n            }\n        )\n            .then(handleResponse)\n            .then((response) => storeResponseTokens(response, this.tokenStore));\n\n        return webAuthnFinishResponse.auth_result;\n    }\n\n    /**\n     * Initiate WebAuthn for a new device\n     * @param {string} magicLink The Passage magicLink being used for a new WebAuthn start\n     * @return {Promise<authResult>}\n     */\n    async activateWebAuthnNewDevice(magicLink: string): Promise<authResult> {\n        const webAuthnStartResponse = await fetch(this.apiUrl + '/magic-link/webauthn/new/start', {\n            headers: getHeaders(),\n            body: JSON.stringify({\n                magic_link: magicLink,\n            }),\n            method: 'POST',\n        }).then(handleResponse);\n\n        const credential: Credential | null = await navigator.credentials\n            .create({\n                publicKey: this._parsePublicKeyNewDevice(\n                    webAuthnStartResponse.handshake.challenge.publicKey\n                ),\n            })\n            .catch((_) => {\n                throw new PassageError('could not parse public key for new device', {\n                    status: PassageErrorCode.PSGParsePublicKeyForNewDeviceFailed,\n                    statusText: 'PSG Parse Public Key For New Device Failed',\n                });\n            });\n\n        // @ts-ignore\n        let attestationObject = new Uint8Array(credential?.response.attestationObject);\n        if (_isFirefox98Win()) {\n            attestationObject = _modifyAttestationObject(attestationObject);\n        }\n        const webAuthnFinishResponse = await fetch(\n            this.apiUrl + '/magic-link/webauthn/new/finish',\n            {\n                headers: getHeaders(),\n                method: 'POST',\n                body: JSON.stringify({\n                    magic_link: magicLink,\n                    user_id: webAuthnStartResponse.user.id,\n                    handshake_id: webAuthnStartResponse.handshake.id,\n                    handshake_response: {\n                        // @ts-ignore\n                        rawId: bytesHelper.encodeBytes(credential.rawId),\n                        // @ts-ignore\n                        id: credential.id,\n                        // @ts-ignore\n                        type: credential.type,\n                        response: {\n                            attestationObject: bytesHelper.encodeBytes(attestationObject),\n                            // @ts-ignore\n                            clientDataJSON: bytesHelper.encodeBytes(\n                                // @ts-ignore\n                                credential.response.clientDataJSON\n                            ),\n                        },\n                    },\n                    device_name: navigator.userAgent,\n                }),\n            }\n        )\n            .then(handleResponse)\n            .then((response) => storeResponseTokens(response, this.tokenStore));\n\n        const userID: string = webAuthnStartResponse.user.id;\n        authTokenHelper.setPsgCredID(userID, credential);\n\n        return webAuthnFinishResponse.auth_result;\n    }\n\n    /**\n     * Parse the public key for login\n     * @param {PublicKeyCredentialRequestOptions} publicKey\n     * @return {PublicKeyCredentialRequestOptions}\n     */\n    private _parsePublicKeyLogin(\n        publicKey: PublicKeyCredentialRequestOptions\n    ): PublicKeyCredentialRequestOptions {\n        publicKey.challenge = bytesHelper.decodeBytes(publicKey.challenge.toString());\n        if (publicKey.allowCredentials) {\n            for (let i = 0; i < publicKey.allowCredentials.length; i++) {\n                const e = publicKey.allowCredentials[i];\n                e.id = bytesHelper.decodeBytes(e.id.toString());\n            }\n            return publicKey;\n        }\n        return publicKey;\n    }\n\n    /**\n     * Parse the public key for new device\n     * @param {PublicKeyCredentialCreationOptions} publicKey\n     * @return {PublicKeyCredentialCreationOptions}\n     */\n    private _parsePublicKeyNewDevice(\n        publicKey: PublicKeyCredentialCreationOptions\n    ): PublicKeyCredentialCreationOptions {\n        publicKey.challenge = bytesHelper.decodeBytes(publicKey.challenge.toString());\n        publicKey.user.id = bytesHelper.decodeBytes(publicKey.user.id.toString());\n        // ###In case we want to add excludeList in the future###\n        /* if (publicKey.excludeCredentials) {\n            for (let i = 0; i < publicKey.excludeCredentials.length; i++) {\n                const e = publicKey.excludeCredentials[i]\n                e.id = bytesHelper.DecodeBytes(e.id)\n            }\n        }*/\n        return publicKey;\n    }\n}\n","import { PassageUserInfo } from './types/PassageUserInfo';\nimport { Metadata, PassageMagicLinkRequest, PassageUser } from '.';\nimport { PassageEditDeviceRequest } from './types/PassageEditDeviceRequest';\nimport { PassageDevice } from './types/PassageDevice';\nimport BytesHelper from './BytesHelper.js';\nimport { PassageError, PassageErrorCode } from './PassageError';\nimport { handleResponse } from './utils/HandleResponse';\nimport AuthTokenHelper from './AuthTokenHelper';\nimport BrowserHelper from './BrowserHelper';\nimport { getHeaders } from './utils/GetHeaders';\nimport { Session } from './Session';\nimport { ReadOnlyTokenStore, TokenStore } from './TokenStore';\nimport { getBaseURL } from './utils/getBaseURL';\n\nconst bytesHelper = new BytesHelper();\nconst authTokenHelper = new AuthTokenHelper();\nconst browserHelper = new BrowserHelper();\n\n/**\n * The User class used to retrieve information about a Passage User.\n */\nexport class User {\n    private apiUrl: string;\n    private session: Session;\n\n    /**\n     * constructor for the User class.\n     * @param {string} [appID] the App's corresponding AppID\n     * @param {ReadOnlyTokenStore | TokenStore} [tokenStore] A tokenStore object that enables getting Passage User information from an externally stored token.\n     */\n    constructor(appID: string, private tokenStore: TokenStore | ReadOnlyTokenStore) {\n        this.apiUrl = getBaseURL(appID) + '/currentuser';\n        this.session = new Session(appID, this.tokenStore);\n    }\n\n    /**\n     * userInfo returns the user information for the currently authenticated user.\n     * @return {PassageCurrentUser | undefined} the current Passage user's info, or undefined if the\n     * current Passage user's authentication token could not be validated.\n     */\n    async userInfo(): Promise<PassageUserInfo | undefined> {\n        const token = await this._getToken();\n        const userInfoResponse = await fetch(this.apiUrl, {\n            method: 'GET',\n            headers: getHeaders({\n                Authorization: `Bearer ${token}`,\n            }),\n        })\n            .then(async (res) => {\n                if (res.status !== 200) return undefined;\n                const userInfo = await res.json();\n                return userInfo;\n            })\n            .catch((_) => {\n                throw new PassageError('Failed to fetch current user.', {\n                    status: PassageErrorCode.NotFound,\n                    statusText: 'Not Found',\n                });\n            });\n        return userInfoResponse?.user;\n    }\n\n    /**\n     * changeEmail initiate an email change for the authenticated user. An email change requires verification, so an email will be sent to the user which they must verify before the email change takes effect.\n     * @param {string} newEmail\n     * @param {string?} language the language string for localizing emails, if no lanuage or an invalid language is provided the application default lanuage will be used\n     * @return {PassageMagicLinkRequest} the magicLink response on success.\n     */\n    async changeEmail(newEmail: string, language?: string): Promise<PassageMagicLinkRequest> {\n        const token = await this._getToken();\n        const changeEmailResponse = await fetch(`${this.apiUrl}/email`, {\n            method: 'PATCH',\n            headers: getHeaders({\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'application/json',\n            }),\n            body: JSON.stringify({\n                new_email: newEmail,\n                language,\n            }),\n        }).then(handleResponse);\n\n        return changeEmailResponse.magic_link;\n    }\n\n    /**\n     * changePhone initiates a phone number change for the authenticated user. An phone number change requires verification, so an SMS with a link will be sent to the user which they must verify before the phone number change takes effect.\n     * @param {string} newPhone\n     * @param {string?} language the language string for localizing emails, if no lanuage or an invalid language is provided the application default lanuage will be used\n     * @return {PassageMagicLinkRequest} the magicLink response on success.\n     */\n    async changePhone(newPhone: string, language?: string): Promise<PassageMagicLinkRequest> {\n        const token = await this._getToken();\n        const changePhoneResponse = await fetch(`${this.apiUrl}/phone`, {\n            method: 'PATCH',\n            headers: getHeaders({\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'application/json',\n            }),\n            body: JSON.stringify({\n                new_phone: newPhone,\n                language,\n            }),\n        }).then(handleResponse);\n\n        return changePhoneResponse.magic_link;\n    }\n\n    /**\n     * editDevice is used to edit the current user's device attributes such as device_name\n     * @param {string} deviceID\n     * @param {PassageEditDeviceRequest} editDeviceRequest\n     * @return {PassageDevice} the edited device after applying the requested device attribute changes.\n     */\n    async editDevice(\n        deviceID: string,\n        editDeviceRequest: PassageEditDeviceRequest\n    ): Promise<PassageDevice> {\n        if (deviceID === '' || deviceID === undefined) {\n            throw new PassageError('A deviceID is required for an edit device request.', {\n                status: PassageErrorCode.BadRequest,\n                statusText: 'Bad Request',\n            });\n        }\n\n        if (Object.keys(editDeviceRequest).length === 0) {\n            throw new PassageError('Edit device request must not have an empty request body.', {\n                status: PassageErrorCode.BadRequest,\n                statusText: 'Bad Request',\n            });\n        }\n\n        const token = await this._getToken();\n        const passageDeviceResponse = await fetch(`${this.apiUrl}/devices/${deviceID}`, {\n            method: 'PATCH',\n            headers: getHeaders({\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'application/json',\n            }),\n            body: JSON.stringify({\n                ...editDeviceRequest,\n            }),\n        }).then(handleResponse);\n\n        return passageDeviceResponse.device;\n    }\n\n    /**\n     * listDevices is used to list the current user's devices.\n     * @param {string} deviceID\n     * @param {PassageEditDeviceRequest} editDeviceRequest\n     * @return {PassageDevice[]} the array of devices.\n     */\n    async listDevices(): Promise<PassageDevice[]> {\n        const token = await this._getToken();\n        const deviceResponse = await fetch(`${this.apiUrl}/devices/`, {\n            method: 'GET',\n            headers: getHeaders({\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'application/json',\n            }),\n        }).then(handleResponse);\n\n        return deviceResponse.devices;\n    }\n\n    /**\n     * addDevice is used to add a new webAuthn device for the current user.\n     * @return {PassageDevice} the new webAuthn device registered with Passage.\n     */\n    async addDevice(): Promise<PassageDevice> {\n        const token = await this._getToken();\n        const { createPassKeySupported } = await browserHelper.getBrowserInfo();\n        const webAuthnStartResponse = await fetch(this.apiUrl + '/devices/start', {\n            headers: getHeaders({\n                Authorization: `Bearer ${token}`,\n            }),\n            method: 'POST',\n        }).then(handleResponse);\n\n        const credential: PublicKeyCredential | null = await navigator.credentials\n            .create({\n                // @ts-ignore\n                publicKey: this._parsePublicKey(\n                    webAuthnStartResponse.handshake.challenge.publicKey\n                ),\n            })\n            .catch((_) => {\n                throw new PassageError('failed to parse public key', {\n                    status: PassageErrorCode.PSGParsePublicKeyForNewDeviceFailed,\n                    statusText: 'PSG Parse Public Key For New Device Failed',\n                });\n            })\n            .then((credValue) => {\n                return credValue as PublicKeyCredential;\n            });\n\n        let transports: string[] = [];\n        // getTransports() is not defined in all browsers (i.e. Firefox)\n        // make sure the function is defined before trying to use it\n        if (\n            // @ts-ignore\n            credential?.response.getTransports &&\n            // @ts-ignore\n            typeof credential?.response.getTransports === 'function'\n        ) {\n            // @ts-ignore\n            transports = credential?.response.getTransports();\n        }\n        const userID = webAuthnStartResponse.user.id;\n        const webAuthnFinishResponse = await fetch(this.apiUrl + '/devices/finish', {\n            headers: getHeaders({\n                Authorization: `Bearer ${token}`,\n            }),\n            method: 'POST',\n            body: JSON.stringify({\n                user_id: userID,\n                handshake_id: webAuthnStartResponse.handshake.id,\n                handshake_response: {\n                    rawId: bytesHelper.encodeBytes(credential?.rawId!),\n                    id: credential?.id,\n                    type: credential?.type,\n                    response: {\n                        attestationObject: bytesHelper.encodeBytes(\n                            // @ts-ignore\n                            credential?.response.attestationObject\n                        ),\n\n                        clientDataJSON: bytesHelper.encodeBytes(\n                            credential?.response.clientDataJSON!\n                        ),\n                    },\n                    transports: transports,\n                },\n                cred_type: createPassKeySupported ? 'passkey' : 'platform',\n            }),\n        }).then(handleResponse);\n\n        authTokenHelper.setPsgCredID(userID, credential);\n        return webAuthnFinishResponse.device;\n    }\n\n    /**\n     * deleteDevice deletes an existing webAuthn device for the current user.\n     * @param {string | PassageDevice} deviceID the ID of the device to be deleted or a PassageDevice object\n     * @return {boolean} true if the device has been deleted successfully.\n     */\n    async deleteDevice(deviceID: string | PassageDevice): Promise<boolean> {\n        // we do this type check for backwards compatibility\n        // old versions of passage-js 3.0.1 and earlier only accepted a deviceID string\n        // To support updating the psg_cred_obj we added support for passing a PassageDevice object as well\n        const typedID = typeof deviceID === 'string' ? deviceID : deviceID.id;\n        const credID = typeof deviceID === 'string' ? undefined : deviceID.cred_id;\n        if (!typedID) {\n            throw new PassageError('A deviceID is required to delete a device.', {\n                status: PassageErrorCode.NotFound,\n                statusText: 'Not Found',\n            });\n        }\n        let deviceResponse = false;\n        const token = await this._getToken();\n        deviceResponse = await fetch(`${this.apiUrl}/devices/${typedID}`, {\n            method: 'DELETE',\n            headers: getHeaders({\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'application/json',\n            }),\n        }).then(async (res) => {\n            if (!res.ok) {\n                return await res.text().then((psgErrorResponse) => {\n                    throw new PassageError(psgErrorResponse, res);\n                });\n            }\n            return true;\n        });\n\n        // if the remove was successful and we know the matching credID, remove from psg_cred_obj\n        if (deviceResponse && credID !== undefined) {\n            authTokenHelper.removeCredential(credID);\n        }\n        return deviceResponse;\n    }\n\n    /**\n     * getMetadata returns the metadata for the currently authenticated user.\n     * @return {Metadata | undefined} the current Passage user's info, or undefined if the\n     * current Passage user's authentication token could not be validated.\n     */\n    async getMetadata(): Promise<Metadata | undefined> {\n        const token = await this._getToken();\n        const metadataResponse = await fetch(`${this.apiUrl}/user-metadata`, {\n            method: 'GET',\n            headers: getHeaders({\n                Authorization: `Bearer ${token}`,\n            }),\n        }).then(handleResponse);\n\n        return metadataResponse.user_metadata;\n    }\n\n    /**\n     * updateMetadata updates the metadata for the currentuser. Note that only metadata fields set for the app can be updated.\n     * @param {Metadata} metadata\n     * @return {PassageUser} the current user with their newly updated metadata field.\n     */\n    async updateMetadata(metadata: Metadata): Promise<PassageUser> {\n        const token = await this._getToken();\n        const metadataUpdateResponse = await fetch(`${this.apiUrl}/user-metadata`, {\n            method: 'PATCH',\n            headers: getHeaders({\n                Authorization: `Bearer ${token}`,\n                'Content-Type': 'application/json',\n            }),\n            body: JSON.stringify({\n                user_metadata: metadata,\n            }),\n        }).then(handleResponse);\n\n        return metadataUpdateResponse.user;\n    }\n\n    /**\n     * Parse the public key via credential creation options.\n     * @param {PublicKeyCredentialCreationOptions} publicKey\n     * @return {PublicKeyCredentialCreationOptions}\n     */\n    private _parsePublicKey(\n        publicKey: PublicKeyCredentialCreationOptions\n    ): PublicKeyCredentialCreationOptions {\n        publicKey.challenge = bytesHelper.decodeBytes(publicKey.challenge.toString());\n        publicKey.user.id = bytesHelper.decodeBytes(publicKey.user.id.toString());\n        // ###In case we want to add excludeList in the future###\n        /* if (publicKey.excludeCredentials) {\n            for (let i = 0; i < publicKey.excludeCredentials.length; i++) {\n                const e = publicKey.excludeCredentials[i]\n                e.id = bytesHelper.DecodeBytes(e.id)\n            }\n        }*/\n        return publicKey;\n    }\n\n    /**\n     * Returns the external token if used or gets the current auth token, and performs a refresh operation if necessary.\n     * @return {Promise<string>}\n     */\n    private async _getToken(): Promise<string> {\n        return await this.session.getAuthToken();\n    }\n}\n","import jwtDecode, { JwtPayload } from 'jwt-decode';\nimport { PassageError, PassageErrorCode } from './PassageError';\nimport { getHeaders } from './utils/GetHeaders';\nimport { handleResponse } from './utils/HandleResponse';\nimport { authResult } from './Passage';\nimport { ReadOnlyTokenStore, TokenStore, isFullTokenStore } from './TokenStore';\nimport { getBaseURL } from './utils/getBaseURL';\n\ninterface JwtHeader {\n    alg: string;\n    typ: string;\n}\n\n/**\n * The Session class used to manage Passage sessions using refresh tokens.\n */\nexport class Session {\n    private apiUrl: string;\n\n    /**\n     * Session constructor initializing apiURL and identifier class vars\n     * @param {string} [appID] the App's corresponding AppID\n     * @param {ReadOnlyTokenStore | TokenStore} [tokenStore] A tokenStore object that enables getting Passage User information from an externally stored token.\n     * If the tokenStore implements the full TokenStore class, the Session will handle refreshing Passage sessions via the refresh token.\n     */\n    constructor(appID: string, private tokenStore: TokenStore | ReadOnlyTokenStore) {\n        this.apiUrl = getBaseURL(appID) + '/tokens/';\n    }\n\n    /**\n     * authGuard checks if the current user has a JWT that is valid and potentially verifiable.\n     * IMPORTANT: this is not verifying the JWT, it is only checking if the JWT is formatted properly.\n     * @return {boolean} true if the user has a valid (but unverified) JWT, false if not.\n     */\n    async authGuard(): Promise<boolean> {\n        try {\n            const authToken = await this.tokenStore.getAuthToken();\n            const header = jwtDecode<JwtHeader>(authToken, { header: true });\n            const payload = jwtDecode<JwtPayload>(authToken);\n            if (payload !== undefined && header !== undefined) {\n                if (this._validJWTPayload(payload) && this._validJWTHeader(header)) {\n                    return true;\n                }\n            }\n            return false;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Sign out a user by deleting their AuthToken from local storage and revoking their refresh token.\n     * @return {boolean} true if the device has been deleted successfully.\n     */\n    async signOut(): Promise<boolean> {\n        const refreshToken = await this.tokenStore.getRefreshToken();\n        if (!refreshToken) {\n            if (isFullTokenStore(this.tokenStore)) {\n                this.tokenStore.clearTokens();\n            }\n            return true;\n        }\n        return fetch(`${this.apiUrl}?` + new URLSearchParams({ refresh_token: refreshToken }), {\n            method: 'DELETE',\n        })\n            .then(({ status }) => status === 200)\n            .finally(() => {\n                if (isFullTokenStore(this.tokenStore)) {\n                    this.tokenStore.clearTokens();\n                }\n            });\n    }\n\n    /**\n     * getAuthToken gets the current authToken for the currently authenticated user.\n     * @return {string} returns the user's authToken if it exists or fetches a new one with a refresh token if it exists\n     */\n    async getAuthToken(): Promise<string> {\n        const authToken = await this.tokenStore.getAuthToken();\n        const refreshToken = await this.tokenStore.getRefreshToken();\n        if (refreshToken === undefined) {\n            // if there is no refresh token just pass through the auth token\n            // particularly important for the external token case in the User class with authorizers\n            return authToken;\n        }\n        const payload = jwtDecode<JwtPayload>(authToken);\n        if (payload !== undefined && this._validJWTPayload(payload)) {\n            return Promise.resolve(authToken);\n        }\n        return this.refresh().then((authResult) => authResult.auth_token);\n    }\n\n    /**\n     * refresh gets and saves a new authToken for the currently authenticated user using their refresh token\n     * @return {string} returns the user's authToken if successful\n     */\n    async refresh(): Promise<authResult> {\n        const err = new PassageError('Login required', {\n            status: PassageErrorCode.PSGLoginRequired,\n            statusText: 'Login required',\n        });\n        const refreshToken = this.tokenStore.getRefreshToken();\n        if (!refreshToken) return Promise.reject(err);\n        return fetch(this.apiUrl, {\n            headers: getHeaders(),\n            method: 'POST',\n            body: JSON.stringify({ refresh_token: refreshToken }),\n        })\n            .then(handleResponse)\n            .then((response: { auth_result: authResult }) => {\n                if (isFullTokenStore(this.tokenStore)) {\n                    this.tokenStore.setTokens(response.auth_result);\n                }\n                return response.auth_result;\n            })\n            .catch(() => {\n                throw err;\n            });\n    }\n\n    /**\n     * _validJWTPayload checks to see if the current JWT is valid (formatted as expected and isn't expired).\n     * @param {JwtPayload} payload the payload from the JWT.\n     * @return {boolean} true if the JWT payload is valid, false if not.\n     */\n    private _validJWTPayload(payload: JwtPayload): boolean {\n        const expectedKeys = ['exp', 'iss', 'sub'];\n        const currentTime = Math.floor(Date.now() / 1000);\n\n        expectedKeys.forEach((expectedKey) => {\n            if (!(expectedKey in payload)) return false;\n        });\n\n        if (payload.exp && currentTime > payload.exp) return false;\n        return true;\n    }\n\n    /**\n     * _validJWTHeader checkts to see if the JWT header is valid (formatted as expected).\n     * @param {JwtHeader} header the header from the JWT.\n     * @return {boolean} true if the JWT header is valid, false if not.\n     */\n    private _validJWTHeader(header: JwtHeader): boolean {\n        const expectedObject = { alg: 'RS256', typ: 'JWT' };\n\n        if (header.alg !== expectedObject.alg) return false;\n\n        if (header.typ !== expectedObject.typ) return false;\n        return true;\n    }\n}\n","import { env } from '../config/Environment';\n\n/**\n * Builds the base URL for Passage backend operations\n * @param {string} appID The app ID\n * @return {string} base URL\n */\nexport function getBaseURL(appID: string): string {\n    const baseUrl = env.URL;\n    const apiVersion = 'v1';\n    return `${baseUrl}/${apiVersion}/apps/${appID}`;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Call an async function with a maximum time limit (in milliseconds) for the timeout\n * @param {Promise<any>} asyncPromise An asynchronous promise to resolve\n * @param {number} timeLimit Time limit to attempt function in milliseconds\n * @return {Promise<any>} Resolved promise for async function call\n */\nexport const asyncCallWithTimeout = async (\n    asyncPromise: Promise<any>,\n    timeLimit: number\n): Promise<any> => {\n    let timeoutHandle: any;\n\n    const timeoutPromise = new Promise((resolve) => {\n        timeoutHandle = setTimeout(resolve, timeLimit);\n    });\n\n    return Promise.race([asyncPromise, timeoutPromise]).then((result) => {\n        clearTimeout(timeoutHandle);\n        return result;\n    });\n};\n/* eslint-enable @typescript-eslint/no-explicit-any */\n","import { ErrorObject, serializeError } from 'serialize-error';\nimport { env } from './config/Environment';\n\nexport type PassageSentryProject = 'passage-js' | 'passage-elements';\n\nexport interface ISentryConfig {\n    url?: string;\n    project?: PassageSentryProject;\n    dsn?: string;\n    environment?: string;\n    release?: string;\n    version?: string;\n}\n\nexport interface ICaptureEventProps {\n    error?: Error | string;\n    message?: string;\n    sentryConfig?: ISentryConfig;\n}\n\nexport interface CaptureEventBody {\n    error?: Error | string;\n    serializedError?: ErrorObject;\n    message?: string;\n    project: PassageSentryProject;\n    release?: string;\n    dsn?: string;\n    environment?: string;\n    version?: string;\n}\n\nexport const cleanSentryConfig = (config: ISentryConfig): ISentryConfig => {\n    return JSON.parse(\n        JSON.stringify(config, (key, value): unknown => {\n            if (value === null || value === undefined || value === 'undefined') {\n                return undefined;\n            }\n            return value;\n        })\n    );\n};\n\nexport const captureEvent = async (props: ICaptureEventProps): Promise<void> => {\n    try {\n        const {\n            error,\n            message,\n            sentryConfig: {\n                url = env.CAPTURE_EVENT_URL,\n                project = env.SENTRY_PROJECT,\n                dsn = env.SENTRY_PROJECT_DSN,\n                environment = env.SENTRY_PROJECT_ENV,\n                release = env.SENTRY_RELEASE,\n                version = env.SENTRY_PROJECT_VERSION,\n            } = {},\n        } = props;\n\n        const sentryConfig = cleanSentryConfig({\n            project,\n            dsn,\n            environment,\n            url,\n            release,\n            version,\n        });\n\n        if (!(sentryConfig.project && sentryConfig.url) || !(error || message)) {\n            return;\n        }\n\n        let body: CaptureEventBody = {\n            project: sentryConfig.project,\n            dsn: sentryConfig.dsn,\n            environment: sentryConfig.environment,\n            release: sentryConfig.release,\n            version: sentryConfig.version,\n        };\n\n        if (message) {\n            body = {\n                ...body,\n                message,\n            };\n        }\n\n        if (error) {\n            body = {\n                ...body,\n                serializedError: serializeError(\n                    typeof error === 'string' ? new Error(error) : error\n                ),\n            };\n        }\n\n        await fetch(sentryConfig.url, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n            },\n            method: 'POST',\n            body: JSON.stringify(body),\n        });\n    } catch (error) {\n        console.error(error);\n    }\n    return;\n};\n\nexport default captureEvent;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable camelcase */\n\nexport enum Identifier {\n    email = 'email',\n    phone = 'phone',\n    both = 'both',\n}\n\nexport enum RequiredIdentifier {\n    Phone = 'phone',\n    Email = 'email',\n    Both = 'both',\n    Either = 'either',\n}\n\nexport enum UserMetadataType {\n    STRING = 'string',\n    BOOLEAN = 'boolean',\n    INTEGER = 'integer',\n    DATE = 'date',\n    PHONE = 'phone',\n    EMAIL = 'email',\n}\n\nexport interface UserMetadataSchema {\n    id: string;\n    field_name: string;\n    type: UserMetadataType;\n    friendly_name: string;\n    registration: boolean;\n    profile: boolean;\n}\n\nexport interface UserMetadataLayout {\n    id: string;\n    x: number;\n    y: number;\n    w: number;\n    h: number;\n}\n\nexport interface PassageAppInfo {\n    name: string;\n    id: string;\n    auth_origin: string;\n    redirect_url: string;\n    rsa_public_key: string;\n    ephemeral: boolean;\n    allowed_identifier: Identifier;\n    require_identifier_verification: boolean;\n    session_timeout_length: number;\n    required_identifier: RequiredIdentifier;\n    user_metadata_schema: UserMetadataSchema[];\n    layouts: {\n        profile: UserMetadataLayout[];\n        registration: UserMetadataLayout[];\n    };\n    public_signup: boolean;\n    default_language: string;\n}\n","export interface PassageMagicLinkRequest {\n    id: string;\n}\n","/* eslint-disable no-unused-vars */\nexport enum PassageUserStatus {\n    ACTIVE = 'active',\n    INACTIVE = 'inactive',\n    PENDING = 'pending',\n}\n\nexport enum WebAuthnType {\n    Platform = 'platform',\n    Passkey = 'passkey',\n}\n\nexport interface PassageUser {\n    id: string;\n    webauthn: boolean;\n    webauthn_types: WebAuthnType[];\n    status: PassageUserStatus;\n    email?: string;\n    email_verified: boolean;\n    phone?: string;\n    phone_verified: boolean;\n    user_metadata?: object | null;\n}\n\nexport interface Metadata {\n    [key: string]: boolean | string | number;\n}\n\nexport interface CreateUserPayload {\n    identifier: string;\n    user_metadata?: Metadata;\n}\n","import { PassageDevice } from './PassageDevice';\nimport { Metadata, WebAuthnType } from './PassageUser';\n\nexport interface PassageUserInfo {\n    created_at: string;\n    update_at: string;\n    status: string;\n    id: string;\n    email: string;\n    email_verified: boolean;\n    phone: string;\n    phone_verified: boolean;\n    webauthn: boolean;\n    webauthn_devices: PassageDevice[];\n    last_login_at: string;\n    login_count: number;\n    user_metadata: Metadata | null;\n    webauthn_types: WebAuthnType[];\n}\n","import { WebAuthnType } from './PassageUser';\n\nexport interface PassageDevice {\n    id: string;\n    cred_id: string;\n    friendly_name: string;\n    usage_count: number;\n    updated_at: string;\n    created_at: string;\n    last_login_at: string;\n    type: WebAuthnType;\n    user_id: string;\n}\n","export interface PassageEditDeviceRequest {\n    friendly_name: string;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}